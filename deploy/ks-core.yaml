NAME: ks-core
LAST DEPLOYED: Thu Sep 19 03:26:06 2024
NAMESPACE: kubesphere-system
STATUS: deployed
REVISION: 1
CHART: ks-core
VERSION: 1.1.0
APP_VERSION: v4.1.2
TEST SUITE: None
USER-SUPPLIED VALUES:
global:
  tag: v4.1.2

COMPUTED VALUES:
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - preference:
        matchExpressions:
        - key: node-role.kubernetes.io/control-plane
          operator: In
          values:
          - ""
      weight: 100
agent:
  replicaCount: 1
apiserver:
  command:
  - ks-apiserver
  - --logtostderr=true
  containerPorts:
  - containerPort: 9090
    protocol: TCP
  extraEnvVars: []
  extraVolumeMounts: []
  extraVolumes: []
  hardAntiAffinity: false
  image:
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: ""
    repository: kse/ks-apiserver
    tag: ""
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi
auditing:
  auditLevel: Metadata
  enable: false
  logOptions:
    maxAge: 7
    maxBackups: 10
    maxSize: 100
    path: /etc/audit/audit.log
authentication:
  adminPassword: ""
  authenticateRateLimiterMaxTries: 10
  authenticationRateLimiterDuration: 10m0s
  enableMultiLogin: true
  issuer:
    accessTokenInactivityTimeout: 30m
    accessTokenMaxAge: 2h
    jwtSecret: ""
    maximumClockSkew: 10s
  loginHistoryRetentionPeriod: 168h
certmanager:
  duration: 2160h
  renewBefore: 360h
cloud:
  customEnv: {}
  enabled: false
  env: kubesphere.cloud
commonAnnotations: {}
commonLabels: {}
composedApp:
  appSelector: ""
console:
  command: []
  config:
    enableNodeListTerminal: true
  containerPorts: []
  extraEnvVars: []
  extraVolumeMounts: []
  extraVolumes: []
  hardAntiAffinity: false
  image:
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: ""
    repository: kse/ks-console
    tag: ""
  nodePort: 30880
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi
controller:
  command:
  - controller-manager
  - --logtostderr=true
  - --leader-elect=true
  - --controllers=*
  containerPorts:
  - containerPort: 8080
    protocol: TCP
  - containerPort: 8443
    protocol: TCP
  extraEnvVars: []
  extraVolumeMounts: []
  extraVolumes: []
  hardAntiAffinity: false
  image:
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: ""
    repository: kse/ks-controller-manager
    tag: ""
  resources:
    limits:
      cpu: 1
      memory: 1000Mi
    requests:
      cpu: 30m
      memory: 50Mi
experimental:
  validationDirective: ""
extension:
  imageRegistry: ""
  ingress:
    domainSuffix: ""
    httpPort: 80
    httpsPort: 443
    ingressClassName: ""
  nodeSelector: {}
fullnameOverride: ""
global:
  imagePullSecrets: []
  imageRegistry: registry.cn-beijing.aliyuncs.com
  tag: v4.1.2
ha:
  enabled: false
helmExecutor:
  historyMax: 2
  image:
    pullPolicy: IfNotPresent
    registry: ""
    repository: kubesphereio/kubectl
    tag: v1.27.12
  jobTTLAfterFinished: 0s
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 100Mi
  timeout: 10m
hook:
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi
hostClusterName: ""
ingress:
  enabled: false
  ingressClassName: ""
  tls:
    enabled: true
    secretName: kubesphere-tls-certs
    source: generation
internalTLS: false
ksCRDs:
  global:
    imagePullSecrets: []
    imageRegistry: registry.cn-beijing.aliyuncs.com
    tag: v4.1.2
  preUpgrade:
    image:
      pullPolicy: IfNotPresent
      registry: ""
      repository: kubesphereio/kubectl
      tag: v1.27.12
    resources:
      limits:
        cpu: 1
        memory: 1024Mi
      requests:
        cpu: 20m
        memory: 100Mi
kubectl:
  image:
    pullPolicy: IfNotPresent
    registry: ""
    repository: kubesphereio/kubectl
    tag: v1.27.12
letsEncrypt:
  environment: production
nameOverride: ""
nodeSelector: {}
nodeShell:
  image:
    pullPolicy: IfNotPresent
    registry: ""
    repository: kubesphereio/kubectl
    tag: v1.27.12
portal:
  hostname: ks-console.kubesphere-system.svc
  http:
    port: 30880
redis:
  image:
    digest: ""
    pullPolicy: IfNotPresent
    registry: ""
    repository: kubesphereio/redis
    tag: 7.2.4-alpine
  persistentVolume:
    enabled: true
    size: 2Gi
  port: 6379
redisHA:
  additionalAffinities:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: In
            values:
            - ""
        weight: 100
  enabled: false
  haproxy:
    additionalAffinities:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: In
              values:
              - ""
          weight: 100
    containerPort: 6379
    hardAntiAffinity: false
    image:
      digest: ""
      pullPolicy: IfNotPresent
      registry: ""
      repository: kubesphereio/haproxy
      tag: 2.9.6-alpine
    servicePort: 6379
  hardAntiAffinity: false
  image:
    digest: ""
    pullPolicy: IfNotPresent
    registry: ""
    repository: kubesphereio/redis
    tag: 7.2.4-alpine
  persistentVolume:
    enabled: true
    size: 2Gi
  redis:
    port: 6379
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
  - key: CriticalAddonsOnly
    operator: Exists
role: ""
s3:
  accessKeyID: admin
  bucket: uploads
  disableSSL: true
  endpoint: ""
  forcePathStyle: true
  region: us-east-1
  secretAccessKey: admin
serviceAccount:
  annotations: {}
  create: true
  name: kubesphere
tolerations:
- effect: NoSchedule
  key: node-role.kubernetes.io/master
- effect: NoSchedule
  key: node-role.kubernetes.io/control-plane
- key: CriticalAddonsOnly
  operator: Exists
upgrade:
  config: {}
  enabled: false
  image:
    pullPolicy: IfNotPresent
    registry: ""
    repository: kse/ks-upgrade
    tag: ""
  persistenceVolume:
    accessMode: ReadWriteOnce
    name: ks-upgrade
    size: 5Gi
    storageClassName: ""
  resources:
    limits:
      cpu: 1
      memory: 1024Mi
    requests:
      cpu: 20m
      memory: 100Mi

HOOKS:
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "ks-core-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: ks-core/charts/ksCRDs/templates/pre-upgrade-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "ks-core-ks-crds-pre-upgrade-scripts"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  install.sh: |-
    #!/usr/bin/env bash
  
    CRDS_PATH=$1
    echo "ks-crds pre upgrade..."
    # shellcheck disable=SC1060
    for crd in `ls $CRDS_PATH|grep \.yaml$`; do
      echo $crd
      kubectl apply -f $CRDS_PATH/$crd
    done
  app.k8s.io_applications.yaml: |-
    # Copyright 2020 The Kubernetes Authors.
    # SPDX-License-Identifier: Apache-2.0
  
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        api-approved.kubernetes.io: https://github.com/kubernetes-sigs/application/pull/2
        controller-gen.kubebuilder.io/version: v0.4.0
      labels:
        kubesphere.io/resource-served: 'true'
      creationTimestamp: null
      name: applications.app.k8s.io
    spec:
      group: app.k8s.io
      names:
        categories:
          - all
        kind: Application
        listKind: ApplicationList
        plural: applications
        shortNames:
          - app
        singular: application
      scope: Namespaced
      versions:
        - additionalPrinterColumns:
            - description: The type of the application
              jsonPath: .spec.descriptor.type
              name: Type
              type: string
            - description: The creation date
              jsonPath: .spec.descriptor.version
              name: Version
              type: string
            - description: The application object owns the matched resources
              jsonPath: .spec.addOwnerRef
              name: Owner
              type: boolean
            - description: Numbers of components ready
              jsonPath: .status.componentsReady
              name: Ready
              type: string
            - description: The creation date
              jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
          name: v1beta1
          schema:
            openAPIV3Schema:
              description: Application is the Schema for the applications API
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  type: object
                spec:
                  description: ApplicationSpec defines the specification for an Application.
                  properties:
                    addOwnerRef:
                      description: AddOwnerRef objects - flag to indicate if we need to
                        add OwnerRefs to matching objects Matching is done by using Selector
                        to query all ComponentGroupKinds
                      type: boolean
                    assemblyPhase:
                      description: AssemblyPhase represents the current phase of the application's
                        assembly. An empty value is equivalent to "Succeeded".
                      type: string
                    componentKinds:
                      description: ComponentGroupKinds is a list of Kinds for Application's
                        components (e.g. Deployments, Pods, Services, CRDs). It can be used
                        in conjunction with the Application's Selector to list or watch
                        the Applications components.
                      items:
                        description: GroupKind specifies a Group and a Kind, but does not
                          force a version.  This is useful for identifying concepts during
                          lookup stages without having partially valid types
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                        required:
                          - group
                          - kind
                        type: object
                      type: array
                    descriptor:
                      description: Descriptor regroups information and metadata about an
                        application.
                      properties:
                        description:
                          description: Description is a brief string description of the
                            Application.
                          type: string
                        icons:
                          description: Icons is an optional list of icons for an application.
                            Icon information includes the source, size, and mime type.
                          items:
                            description: ImageSpec contains information about an image used
                              as an icon.
                            properties:
                              size:
                                description: (optional) The size of the image in pixels
                                  (e.g., 25x25).
                                type: string
                              src:
                                description: The source for image represented as either
                                  an absolute URL to the image or a Data URL containing
                                  the image. Data URLs are defined in RFC 2397.
                                type: string
                              type:
                                description: (optional) The mine type of the image (e.g.,
                                  "image/png").
                                type: string
                            required:
                              - src
                            type: object
                          type: array
                        keywords:
                          description: Keywords is an optional list of key words associated
                            with the application (e.g. MySQL, RDBMS, database).
                          items:
                            type: string
                          type: array
                        links:
                          description: Links are a list of descriptive URLs intended to
                            be used to surface additional documentation, dashboards, etc.
                          items:
                            description: Link contains information about an URL to surface
                              documentation, dashboards, etc.
                            properties:
                              description:
                                description: Description is human readable content explaining
                                  the purpose of the link.
                                type: string
                              url:
                                description: Url typically points at a website address.
                                type: string
                            type: object
                          type: array
                        maintainers:
                          description: Maintainers is an optional list of maintainers of
                            the application. The maintainers in this list maintain the the
                            source code, images, and package for the application.
                          items:
                            description: ContactData contains information about an individual
                              or organization.
                            properties:
                              email:
                                description: Email is the email address.
                                type: string
                              name:
                                description: Name is the descriptive name.
                                type: string
                              url:
                                description: Url could typically be a website address.
                                type: string
                            type: object
                          type: array
                        notes:
                          description: Notes contain a human readable snippets intended
                            as a quick start for the users of the Application. CommonMark
                            markdown syntax may be used for rich text representation.
                          type: string
                        owners:
                          description: Owners is an optional list of the owners of the installed
                            application. The owners of the application should be contacted
                            in the event of a planned or unplanned disruption affecting
                            the application.
                          items:
                            description: ContactData contains information about an individual
                              or organization.
                            properties:
                              email:
                                description: Email is the email address.
                                type: string
                              name:
                                description: Name is the descriptive name.
                                type: string
                              url:
                                description: Url could typically be a website address.
                                type: string
                            type: object
                          type: array
                        type:
                          description: Type is the type of the application (e.g. WordPress,
                            MySQL, Cassandra).
                          type: string
                        version:
                          description: Version is an optional version indicator for the
                            Application.
                          type: string
                      type: object
                    info:
                      description: Info contains human readable key,value pairs for the
                        Application.
                      items:
                        description: InfoItem is a human readable key,value pair containing
                          important information about how to access the Application.
                        properties:
                          name:
                            description: Name is a human readable title for this piece of
                              information.
                            type: string
                          type:
                            description: Type of the value for this InfoItem.
                            type: string
                          value:
                            description: Value is human readable content.
                            type: string
                          valueFrom:
                            description: ValueFrom defines a reference to derive the value
                              from another source.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a
                                    valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container
                                    that triggered the event) or if no container name
                                    is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to
                                    have some well-defined way of referencing a part of
                                    an object. TODO: this design is not final and this
                                    field is subject to change in the future.'
                                    type: string
                                  key:
                                    description: The key to select.
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which this
                                    reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                              ingressRef:
                                description: Select an Ingress.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a
                                    valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container
                                    that triggered the event) or if no container name
                                    is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to
                                    have some well-defined way of referencing a part of
                                    an object. TODO: this design is not final and this
                                    field is subject to change in the future.'
                                    type: string
                                  host:
                                    description: The optional host to select.
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  path:
                                    description: The optional HTTP path.
                                    type: string
                                  protocol:
                                    description: Protocol for the ingress
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which this
                                    reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                              secretKeyRef:
                                description: Selects a key of a Secret.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a
                                    valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container
                                    that triggered the event) or if no container name
                                    is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to
                                    have some well-defined way of referencing a part of
                                    an object. TODO: this design is not final and this
                                    field is subject to change in the future.'
                                    type: string
                                  key:
                                    description: The key to select.
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which this
                                    reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                              serviceRef:
                                description: Select a Service.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object instead
                                    of an entire object, this string should contain a
                                    valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container
                                    within a pod, this would take on a value like: "spec.containers{name}"
                                    (where "name" refers to the name of the container
                                    that triggered the event) or if no container name
                                    is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to
                                    have some well-defined way of referencing a part of
                                    an object. TODO: this design is not final and this
                                    field is subject to change in the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  path:
                                    description: The optional HTTP path.
                                    type: string
                                  port:
                                    description: The optional port to select.
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: Protocol for the service
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which this
                                    reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                              type:
                                description: Type of source.
                                type: string
                            type: object
                        type: object
                      type: array
                    selector:
                      description: 'Selector is a label query over kinds that created by
                      the application. It must match the component objects'' labels. More
                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements.
                            The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector that
                              contains values, a key, and an operator that relates the key
                              and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to
                                  a set of values. Valid operators are In, NotIn, Exists
                                  and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the
                                  operator is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A single
                            {key,value} in the matchLabels map is equivalent to an element
                            of matchExpressions, whose key field is "key", the operator
                            is "In", and the values array contains only "value". The requirements
                            are ANDed.
                          type: object
                      type: object
                  type: object
                status:
                  description: ApplicationStatus defines controller's the observed state
                    of Application
                  properties:
                    components:
                      description: Object status array for all matching objects
                      items:
                        description: ObjectStatus is a generic status holder for objects
                        properties:
                          group:
                            description: Object group
                            type: string
                          kind:
                            description: Kind of object
                            type: string
                          link:
                            description: Link to object
                            type: string
                          name:
                            description: Name of object
                            type: string
                          status:
                            description: 'Status. Values: InProgress, Ready, Unknown'
                            type: string
                        type: object
                      type: array
                    componentsReady:
                      description: 'ComponentsReady: status of the components in the format
                      ready/total'
                      type: string
                    conditions:
                      description: Conditions represents the latest state of the object
                      items:
                        description: Condition describes the state of an object at a certain
                          point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from one status
                              to another.
                            format: date-time
                            type: string
                          lastUpdateTime:
                            description: Last time the condition was probed
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details about
                              the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False, Unknown.
                            type: string
                          type:
                            description: Type of condition.
                            type: string
                        required:
                          - status
                          - type
                        type: object
                      type: array
                    observedGeneration:
                      description: ObservedGeneration is the most recent generation observed.
                        It corresponds to the Object's generation, which is updated on mutation
                        by the API Server.
                      format: int64
                      type: integer
                  type: object
              type: object
          served: true
          storage: true
          subresources:
            status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  application.kubesphere.io_applicationreleases.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: applicationreleases.application.kubesphere.io
    spec:
      group: application.kubesphere.io
      names:
        kind: ApplicationRelease
        listKind: ApplicationReleaseList
        plural: applicationreleases
        shortNames:
        - apprls
        singular: applicationrelease
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: workspace
          type: string
        - jsonPath: .metadata.labels.application\.kubesphere\.io/app-id
          name: app
          type: string
        - jsonPath: .metadata.labels.application\.kubesphere\.io/appversion-id
          name: appversion
          type: string
        - jsonPath: .spec.appType
          name: appType
          type: string
        - jsonPath: .metadata.labels.kubesphere\.io/cluster
          name: Cluster
          type: string
        - jsonPath: .metadata.labels.kubesphere\.io/namespace
          name: Namespace
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v2
        schema:
          openAPIV3Schema:
            description: ApplicationRelease is the Schema for the applicationreleases
              API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ApplicationReleaseSpec defines the desired state of ApplicationRelease
                properties:
                  appID:
                    type: string
                  appType:
                    type: string
                  appVersionID:
                    type: string
                  values:
                    format: byte
                    type: string
                required:
                - appID
                - appVersionID
                type: object
              status:
                description: ApplicationReleaseStatus defines the observed state of ApplicationRelease
                properties:
                  installJobName:
                    type: string
                  lastUpdate:
                    format: date-time
                    type: string
                  message:
                    type: string
                  realTimeResources:
                    items:
                      description: |-
                        RawMessage is a raw encoded JSON value.
                        It implements Marshaler and Unmarshaler and can
                        be used to delay JSON decoding or precompute a JSON encoding.
                      format: byte
                      type: string
                    type: array
                  specHash:
                    type: string
                  state:
                    type: string
                  uninstallJobName:
                    type: string
                required:
                - state
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  application.kubesphere.io_applications.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: applications.application.kubesphere.io
    spec:
      group: application.kubesphere.io
      names:
        kind: Application
        listKind: ApplicationList
        plural: applications
        shortNames:
        - app
        singular: application
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.application\.kubesphere\.io/repo-name
          name: repo
          type: string
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: workspace
          type: string
        - jsonPath: .spec.appType
          name: appType
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v2
        schema:
          openAPIV3Schema:
            description: Application is the Schema for the applications API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ApplicationSpec defines the desired state of Application
                properties:
                  abstraction:
                    type: string
                  appHome:
                    type: string
                  appType:
                    type: string
                  attachments:
                    items:
                      type: string
                    type: array
                  icon:
                    type: string
                  resources:
                    items:
                      properties:
                        Desc:
                          type: string
                        Group:
                          type: string
                        Name:
                          type: string
                        ParentNode:
                          type: string
                        Resource:
                          type: string
                        Version:
                          type: string
                      type: object
                    type: array
                type: object
              status:
                description: ApplicationStatus defines the observed state of Application
                properties:
                  state:
                    description: 'the state of the helm application: draft, submitted,
                      passed, rejected, suspended, active'
                    type: string
                  updateTime:
                    format: date-time
                    type: string
                required:
                - updateTime
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  application.kubesphere.io_applicationversions.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: applicationversions.application.kubesphere.io
    spec:
      group: application.kubesphere.io
      names:
        kind: ApplicationVersion
        listKind: ApplicationVersionList
        plural: applicationversions
        shortNames:
        - appver
        singular: applicationversion
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.application\.kubesphere\.io/repo-name
          name: repo
          type: string
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: workspace
          type: string
        - jsonPath: .metadata.labels.application\.kubesphere\.io/app-id
          name: app
          type: string
        - jsonPath: .spec.appType
          name: appType
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v2
        schema:
          openAPIV3Schema:
            description: ApplicationVersion is the Schema for the applicationversions
              API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ApplicationVersionSpec defines the desired state of ApplicationVersion
                properties:
                  appHome:
                    type: string
                  appType:
                    type: string
                  created:
                    format: date-time
                    type: string
                  digest:
                    type: string
                  icon:
                    type: string
                  maintainer:
                    items:
                      description: Maintainer describes a Chart maintainer.
                      properties:
                        email:
                          type: string
                        name:
                          type: string
                        url:
                          type: string
                      type: object
                    type: array
                  pullUrl:
                    type: string
                  versionName:
                    type: string
                required:
                - versionName
                type: object
              status:
                description: ApplicationVersionStatus defines the observed state of ApplicationVersion
                properties:
                  message:
                    type: string
                  state:
                    type: string
                  updated:
                    format: date-time
                    type: string
                  userName:
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  application.kubesphere.io_categories.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: categories.application.kubesphere.io
    spec:
      group: application.kubesphere.io
      names:
        kind: Category
        listKind: CategoryList
        plural: categories
        shortNames:
        - appctg
        singular: category
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.total
          name: total
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v2
        schema:
          openAPIV3Schema:
            description: Category is the Schema for the categories API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: CategorySpec defines the desired state of HelmRepo
                properties:
                  icon:
                    type: string
                type: object
              status:
                properties:
                  total:
                    type: integer
                required:
                - total
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  application.kubesphere.io_repos.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: repos.application.kubesphere.io
    spec:
      group: application.kubesphere.io
      names:
        kind: Repo
        listKind: RepoList
        plural: repos
        shortNames:
        - repo
        singular: repo
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        - jsonPath: .spec.url
          name: url
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v2
        schema:
          openAPIV3Schema:
            description: Repo is the Schema for the repoes API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: RepoSpec defines the desired state of Repo
                properties:
                  credential:
                    properties:
                      caFile:
                        description: verify certificates of HTTPS-enabled servers using
                          this CA bundle
                        type: string
                      certFile:
                        description: identify HTTPS client using this SSL certificate
                          file
                        type: string
                      insecureSkipTLSVerify:
                        description: skip tls certificate checks for the repository, default
                          is ture
                        type: boolean
                      keyFile:
                        description: identify HTTPS client using this SSL key file
                        type: string
                      password:
                        description: chart repository password
                        type: string
                      username:
                        description: chart repository username
                        type: string
                    type: object
                  description:
                    type: string
                  syncPeriod:
                    type: integer
                  url:
                    type: string
                required:
                - url
                type: object
              status:
                description: RepoStatus defines the observed state of Repo
                properties:
                  lastUpdateTime:
                    format: date-time
                    type: string
                  state:
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  cluster.kubesphere.io_clusters.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: clusters.cluster.kubesphere.io
    spec:
      group: cluster.kubesphere.io
      names:
        kind: Cluster
        listKind: ClusterList
        plural: clusters
        singular: cluster
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.provider
          name: Provider
          type: string
        - jsonPath: .status.kubernetesVersion
          name: Version
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: Cluster is the schema for the clusters API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  config:
                    description: Config represents the custom helm chart values used when
                      installing the cluster
                    format: byte
                    type: string
                  connection:
                    description: Connection holds info to connect to the member cluster
                    properties:
                      externalKubernetesAPIEndpoint:
                        description: |-
                          External Kubernetes API Server endpoint
                          Will be populated by ks-apiserver if connection type is proxy and ExternalKubeAPIEnabled is true.
                        type: string
                      kubeconfig:
                        description: |-
                          KubeConfig content used to connect to cluster api server
                          Should provide this field explicitly if connection type is direct.
                          Will be populated by ks-proxy if connection type is proxy.
                        format: byte
                        type: string
                      kubernetesAPIEndpoint:
                        description: |-
                          Kubernetes API Server endpoint. Example: https://10.10.0.1:6443
                          Should provide this field explicitly if connection type is direct.
                          Will be populated by ks-apiserver if connection type is proxy.
                        type: string
                      kubernetesAPIServerPort:
                        description: |-
                          KubeAPIServerPort is the port which listens for forwarding kube-apiserver traffic
                          Only applicable when connection type is proxy.
                        type: integer
                      kubesphereAPIEndpoint:
                        description: |-
                          KubeSphere API Server endpoint. Example: http://10.10.0.11:8080
                          Should provide this field explicitly if connection type is direct.
                          Will be populated by ks-apiserver if connection type is proxy.
                        type: string
                      kubesphereAPIServerPort:
                        description: |-
                          KubeSphereAPIServerPort is the port which listens for forwarding kubesphere apigateway traffic
                          Only applicable when connection type is proxy.
                        type: integer
                      token:
                        description: |-
                          Token used by agents of member cluster to connect to host cluster proxy.
                          This field is populated by apiserver only if connection type is proxy.
                        type: string
                      type:
                        description: |-
                          type defines how host cluster will connect to host cluster
                          ConnectionTypeDirect means direct connection, this requires
                            kubeconfig and kubesphere apiserver endpoint provided
                          ConnectionTypeProxy means using kubesphere proxy, no kubeconfig
                            or kubesphere apiserver endpoint required
                        type: string
                    type: object
                  enable:
                    description: |-
                      Desired state of the cluster
                      Deprecated: will be removed in the next version.
                    type: boolean
                  externalKubeAPIEnabled:
                    description: ExternalKubeAPIEnabled export kube-apiserver to public
                      use a lb type service if connection type is proxy
                    type: boolean
                  joinFederation:
                    description: |-
                      Join cluster as a kubefed cluster
                      Deprecated: will be removed in the next version.
                    type: boolean
                  provider:
                    description: Provider of the cluster, this field is just for description
                    type: string
                type: object
              status:
                properties:
                  conditions:
                    description: Represents the latest available observations of a cluster's
                      current state.
                    items:
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one status
                            to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          type: string
                        message:
                          description: A human-readable message indicating details about
                            the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False, Unknown.
                          type: string
                        type:
                          description: Type of the condition
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  configz:
                    additionalProperties:
                      type: boolean
                    description: |-
                      Configz is status of components enabled in the member cluster. This is synchronized with member cluster
                      every amount of time, like 5 minutes.
                      Deprecated: this field will be removed in the future version.
                    type: object
                  kubeSphereVersion:
                    description: GitVersion of the /kapis/version api response, this field
                      is populated by cluster controller
                    type: string
                  kubernetesVersion:
                    description: GitVersion of the kubernetes cluster, this field is populated
                      by cluster controller
                    type: string
                  nodeCount:
                    description: |-
                      Count of the kubernetes cluster nodes
                      This field may not reflect the instant status of the cluster.
                    type: integer
                  region:
                    description: Region is the name of the region in which all of the
                      nodes in the cluster exist.  e.g. 'us-east1'.
                    type: string
                  uid:
                    description: UID is the kube-system namespace UID of the cluster,
                      which represents the unique ID of the cluster.
                    type: string
                  zones:
                    description: Zones are the names of availability zones in which the
                      nodes of the cluster exist, e.g. 'us-east1-a'.
                    items:
                      type: string
                    type: array
                type: object
            type: object
        served: true
        storage: true
        subresources: {}
  cluster.kubesphere.io_labels.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: labels.cluster.kubesphere.io
    spec:
      group: cluster.kubesphere.io
      names:
        kind: Label
        listKind: LabelList
        plural: labels
        singular: label
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.key
          name: Key
          type: string
        - jsonPath: .spec.value
          name: Value
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  backgroundColor:
                    type: string
                  clusters:
                    items:
                      type: string
                    type: array
                  key:
                    type: string
                  value:
                    type: string
                required:
                - key
                - value
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
  extensions.kubesphere.io_apiservices.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: apiservices.extensions.kubesphere.io
    spec:
      group: extensions.kubesphere.io
      names:
        kind: APIService
        listKind: APIServiceList
        plural: apiservices
        singular: apiservice
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: |-
              APIService is a special resource used in Ks-apiserver
              declares a directional proxy path for a resource type API，
              it's similar to Kubernetes API Aggregation Layer.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  caBundle:
                    format: byte
                    type: string
                  group:
                    type: string
                  insecureSkipVerify:
                    type: boolean
                  service:
                    description: |-
                      service is a reference to the service for this endpoint. Either
                      service or url must be specified.
                      the scheme is default to HTTPS.
                    properties:
                      name:
                        description: |-
                          name is the name of the service.
                          Required
                        type: string
                      namespace:
                        description: |-
                          namespace is the namespace of the service.
                          Required
                        type: string
                      path:
                        description: path is an optional URL path at which the upstream
                          will be contacted.
                        type: string
                      port:
                        description: |-
                          port is an optional service port at which the upstream will be contacted.
                          `port` should be a valid port number (1-65535, inclusive).
                          Defaults to 443 for backward compatibility.
                        format: int32
                        type: integer
                    required:
                    - name
                    - namespace
                    type: object
                  url:
                    description: |-
                      `url` gives the location of the upstream, in standard URL form
                      (`scheme://host:port/path`). Exactly one of `url` or `service`
                      must be specified.
                    type: string
                  version:
                    type: string
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the current
                        state of this API Resource.\n---\nThis struct is intended for
                        direct use as an array at the field path .status.conditions.  For
                        example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                        observations of a foo's current state.\n\t    // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                        +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                        \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  state:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  extensions.kubesphere.io_extensionentries.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: extensionentries.extensions.kubesphere.io
    spec:
      group: extensions.kubesphere.io
      names:
        kind: ExtensionEntry
        listKind: ExtensionEntryList
        plural: extensionentries
        singular: extensionentry
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: ExtensionEntry declares an entry endpoint that needs to be injected
              into ks-console.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  entries:
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the current
                        state of this API Resource.\n---\nThis struct is intended for
                        direct use as an array at the field path .status.conditions.  For
                        example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                        observations of a foo's current state.\n\t    // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                        +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                        \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  state:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  extensions.kubesphere.io_jsbundles.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: jsbundles.extensions.kubesphere.io
    spec:
      group: extensions.kubesphere.io
      names:
        kind: JSBundle
        listKind: JSBundleList
        plural: jsbundles
        singular: jsbundle
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: |-
              JSBundle declares a js bundle that needs to be injected into ks-console,
              the endpoint can be provided by a service or a static file.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  raw:
                    format: byte
                    type: string
                  rawFrom:
                    properties:
                      caBundle:
                        format: byte
                        type: string
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                            type: string
                          namespace:
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        - namespace
                        type: object
                        x-kubernetes-map-type: atomic
                      insecureSkipVerify:
                        type: boolean
                      secretKeyRef:
                        description: Selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must be
                              a valid secret key.
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                            type: string
                          namespace:
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must be
                              defined
                            type: boolean
                        required:
                        - key
                        - namespace
                        type: object
                        x-kubernetes-map-type: atomic
                      service:
                        description: |-
                          service is a reference to the service for this endpoint. Either
                          service or url must be specified.
                          the scheme is default to HTTPS.
                        properties:
                          name:
                            description: |-
                              name is the name of the service.
                              Required
                            type: string
                          namespace:
                            description: |-
                              namespace is the namespace of the service.
                              Required
                            type: string
                          path:
                            description: path is an optional URL path at which the upstream
                              will be contacted.
                            type: string
                          port:
                            description: |-
                              port is an optional service port at which the upstream will be contacted.
                              `port` should be a valid port number (1-65535, inclusive).
                              Defaults to 443 for backward compatibility.
                            format: int32
                            type: integer
                        required:
                        - name
                        - namespace
                        type: object
                      url:
                        description: |-
                          `url` gives the location of the upstream, in standard URL form
                          (`scheme://host:port/path`). Exactly one of `url` or `service`
                          must be specified.
                        type: string
                    type: object
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the current
                        state of this API Resource.\n---\nThis struct is intended for
                        direct use as an array at the field path .status.conditions.  For
                        example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                        observations of a foo's current state.\n\t    // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                        +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                        \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  link:
                    description: Link is the path for downloading JS file, default to
                      "/dist/{jsBundleName}/index.js".
                    type: string
                  state:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  extensions.kubesphere.io_reverseproxies.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: reverseproxies.extensions.kubesphere.io
    spec:
      group: extensions.kubesphere.io
      names:
        kind: ReverseProxy
        listKind: ReverseProxyList
        plural: reverseproxies
        singular: reverseproxy
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  directives:
                    properties:
                      authProxy:
                        description: Add auth proxy header to requests
                        type: boolean
                      headerDown:
                        description: Sets, adds (with the + prefix), deletes (with the
                          - prefix), or performs a replacement (by using two arguments,
                          a search and replacement) in a response header coming downstream
                          from the backend.
                        items:
                          type: string
                        type: array
                      headerUp:
                        description: Sets, adds (with the + prefix), deletes (with the
                          - prefix), or performs a replacement (by using two arguments,
                          a search and replacement) in a request header going upstream
                          to the backend.
                        items:
                          type: string
                        type: array
                      method:
                        description: Changes the request's HTTP verb.
                        type: string
                      pathRegexp:
                        items:
                          type: string
                        type: array
                      rejectForwardingRedirects:
                        description: Reject to forward redirect response
                        type: boolean
                      replace:
                        items:
                          type: string
                        type: array
                      rewrite:
                        items:
                          type: string
                        type: array
                      stripPathPrefix:
                        description: Strips the given prefix from the beginning of the
                          URI path.
                        type: string
                      stripPathSuffix:
                        description: Strips the given suffix from the end of the URI path.
                        type: string
                      wrapTransport:
                        description: ' WrapTransport indicates whether the provided Transport
                          should be wrapped with default proxy transport behavior (URL
                          rewriting, X-Forwarded-* header setting)'
                        type: boolean
                    type: object
                  matcher:
                    properties:
                      method:
                        type: string
                      path:
                        type: string
                    required:
                    - method
                    - path
                    type: object
                  upstream:
                    properties:
                      caBundle:
                        format: byte
                        type: string
                      insecureSkipVerify:
                        type: boolean
                      service:
                        description: |-
                          service is a reference to the service for this endpoint. Either
                          service or url must be specified.
                          the scheme is default to HTTPS.
                        properties:
                          name:
                            description: |-
                              name is the name of the service.
                              Required
                            type: string
                          namespace:
                            description: |-
                              namespace is the namespace of the service.
                              Required
                            type: string
                          path:
                            description: path is an optional URL path at which the upstream
                              will be contacted.
                            type: string
                          port:
                            description: |-
                              port is an optional service port at which the upstream will be contacted.
                              `port` should be a valid port number (1-65535, inclusive).
                              Defaults to 443 for backward compatibility.
                            format: int32
                            type: integer
                        required:
                        - name
                        - namespace
                        type: object
                      url:
                        description: |-
                          `url` gives the location of the upstream, in standard URL form
                          (`scheme://host:port/path`). Exactly one of `url` or `service`
                          must be specified.
                        type: string
                    type: object
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the current
                        state of this API Resource.\n---\nThis struct is intended for
                        direct use as an array at the field path .status.conditions.  For
                        example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                        observations of a foo's current state.\n\t    // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                        +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                        \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  state:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  gateway.kubesphere.io_ingressclassscopes.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: ingressclassscopes.gateway.kubesphere.io
    spec:
      group: gateway.kubesphere.io
      names:
        kind: IngressClassScope
        listKind: IngressClassScopeList
        plural: ingressclassscopes
        singular: ingressclassscope
      scope: Cluster
      versions:
      - name: v1alpha2
        schema:
          openAPIV3Schema:
            description: |-
              IngressClassScope is a special resource used to
              connect other gateways to the KubeSphere platform.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  ingressClass:
                    properties:
                      default:
                        type: boolean
                      name:
                        type: string
                    type: object
                  scope:
                    description: |-
                      Watching scope, when both are empty, watching all namespaces,
                      when neither is empty, namespaces is preferred.
                    properties:
                      namespaceSelector:
                        type: string
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              status:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
        served: true
        storage: true
  iam.kubesphere.io_builtinroles.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: builtinroles.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: BuiltinRole
        listKind: BuiltinRoleList
        plural: builtinroles
        singular: builtinrole
      scope: Cluster
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              role:
                type: object
                x-kubernetes-embedded-resource: true
                x-kubernetes-preserve-unknown-fields: true
              targetSelector:
                description: |-
                  A label selector is a label query over a set of resources. The result of matchLabels and
                  matchExpressions are ANDed. An empty label selector matches all objects. A null
                  label selector matches no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            required:
            - role
            type: object
        served: true
        storage: true
  iam.kubesphere.io_categories.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: categories.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: Category
        listKind: CategoryList
        plural: categories
        singular: category
      scope: Cluster
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: Category is the Schema for the categories API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: CategorySpec defines the desired state of Category
                properties:
                  description:
                    additionalProperties:
                      type: string
                    type: object
                  displayName:
                    additionalProperties:
                      type: string
                    type: object
                  icon:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  iam.kubesphere.io_clusterrolebindings.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: clusterrolebindings.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: ClusterRoleBinding
        listKind: ClusterRoleBindingList
        plural: clusterrolebindings
        singular: clusterrolebinding
      scope: Cluster
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              roleRef:
                description: |-
                  RoleRef can only reference a WorkspaceRole.
                  If the RoleRef cannot be resolved, the Authorizer must return an error.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              subjects:
                description: Subjects holds references to the objects the role applies
                  to.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - roleRef
            type: object
        served: true
        storage: true
  iam.kubesphere.io_clusterroles.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: clusterroles.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: ClusterRole
        listKind: ClusterRoleList
        plural: clusterroles
        singular: clusterrole
      scope: Cluster
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: ClusterRole is the Schema for the clusterroles API
            properties:
              aggregationRoleTemplates:
                description: AggregationRoleTemplates means which RoleTemplates are composed
                  this Role
                properties:
                  roleSelector:
                    description: RoleSelectors select rules from RoleTemplate`s rules
                      by labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  templateNames:
                    description: TemplateNames select rules from RoleTemplate`s rules
                      by RoleTemplate name
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              rules:
                description: Rules holds all the PolicyRules for this WorkspaceRole
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that
                        the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
                        contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        served: true
        storage: true
  iam.kubesphere.io_globalrolebindings.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: globalrolebindings.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: GlobalRoleBinding
        listKind: GlobalRoleBindingList
        plural: globalrolebindings
        singular: globalrolebinding
      scope: Cluster
      versions:
      - deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: GlobalRoleBinding is the Schema for the globalrolebindings API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              roleRef:
                description: |-
                  RoleRef can only reference a GlobalRole.
                  If the RoleRef cannot be resolved, the Authorizer must return an error.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              subjects:
                description: Subjects holds references to the objects the role applies
                  to.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - roleRef
            type: object
        served: true
        storage: false
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: GlobalRoleBinding is the Schema for the globalrolebindings API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              roleRef:
                description: |-
                  RoleRef can only reference a GlobalRole.
                  If the RoleRef cannot be resolved, the Authorizer must return an error.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              subjects:
                description: Subjects holds references to the objects the role applies
                  to.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - roleRef
            type: object
        served: true
        storage: true
  iam.kubesphere.io_globalroles.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: globalroles.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: GlobalRole
        listKind: GlobalRoleList
        plural: globalroles
        singular: globalrole
      scope: Cluster
      versions:
      - deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              rules:
                description: Rules holds all the PolicyRules for this GlobalRole
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that
                        the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
                        contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        served: true
        storage: false
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: GlobalRole is the Schema for the globalroles API
            properties:
              aggregationRoleTemplates:
                description: AggregationRoleTemplates means which RoleTemplates are composed
                  this Role
                properties:
                  roleSelector:
                    description: RoleSelectors select rules from RoleTemplate`s rules
                      by labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  templateNames:
                    description: TemplateNames select rules from RoleTemplate`s rules
                      by RoleTemplate name
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              rules:
                description: Rules holds all the PolicyRules for this WorkspaceRole
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that
                        the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
                        contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            required:
            - rules
            type: object
        served: true
        storage: true
  iam.kubesphere.io_groupbindings.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: groupbindings.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - group
        kind: GroupBinding
        listKind: GroupBindingList
        plural: groupbindings
        singular: groupbinding
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .groupRef.name
          name: Group
          type: string
        - jsonPath: .users
          name: Users
          type: string
        deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: GroupBinding is the Schema for the groupbindings API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              groupRef:
                description: GroupRef defines the desired relation of GroupBinding
                properties:
                  apiGroup:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                type: object
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              users:
                items:
                  type: string
                type: array
            type: object
        served: true
        storage: false
        subresources: {}
      - additionalPrinterColumns:
        - jsonPath: .groupRef.name
          name: Group
          type: string
        - jsonPath: .users
          name: Users
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: GroupBinding is the Schema for the groupbindings API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              groupRef:
                description: GroupRef defines the desired relation of GroupBinding
                properties:
                  apiGroup:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                type: object
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              users:
                items:
                  type: string
                type: array
            type: object
        served: true
        storage: true
        subresources: {}
  iam.kubesphere.io_groups.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: groups.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - group
        kind: Group
        listKind: GroupList
        plural: groups
        singular: group
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: Group is the Schema for the groups API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: GroupSpec defines the desired state of Group
                type: object
              status:
                description: GroupStatus defines the observed state of Group
                type: object
            type: object
        served: true
        storage: false
        subresources: {}
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: Group is the Schema for the groups API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: GroupSpec defines the desired state of Group
                type: object
              status:
                description: GroupStatus defines the observed state of Group
                type: object
            type: object
        served: true
        storage: true
        subresources: {}
  iam.kubesphere.io_loginrecords.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: loginrecords.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: LoginRecord
        listKind: LoginRecordList
        plural: loginrecords
        singular: loginrecord
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.type
          name: Type
          type: string
        - jsonPath: .spec.provider
          name: Provider
          type: string
        - jsonPath: .spec.sourceIP
          name: From
          type: string
        - jsonPath: .spec.success
          name: Success
          type: string
        - jsonPath: .spec.reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  provider:
                    description: Provider of authentication, Ldap/Github etc.
                    type: string
                  reason:
                    description: States failed login attempt reason
                    type: string
                  sourceIP:
                    description: Source IP of client
                    type: string
                  success:
                    description: Successful login attempt or not
                    type: boolean
                  type:
                    description: Which authentication method used, Password/OAuth/Token
                    type: string
                  userAgent:
                    description: User agent of login attempt
                    type: string
                required:
                - provider
                - reason
                - sourceIP
                - success
                - type
                type: object
            required:
            - spec
            type: object
        served: true
        storage: false
        subresources: {}
      - additionalPrinterColumns:
        - jsonPath: .spec.type
          name: Type
          type: string
        - jsonPath: .spec.provider
          name: Provider
          type: string
        - jsonPath: .spec.sourceIP
          name: From
          type: string
        - jsonPath: .spec.success
          name: Success
          type: string
        - jsonPath: .spec.reason
          name: Reason
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1beta1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  provider:
                    description: Provider of authentication, Ldap/Github etc.
                    type: string
                  reason:
                    description: States failed login attempt reason
                    type: string
                  sourceIP:
                    description: Source IP of client
                    type: string
                  success:
                    description: Successful login attempt or not
                    type: boolean
                  type:
                    description: Which authentication method used, Password/OAuth/Token
                    type: string
                  userAgent:
                    description: User agent of login attempt
                    type: string
                required:
                - provider
                - reason
                - sourceIP
                - success
                - type
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
  iam.kubesphere.io_rolebindings.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: rolebindings.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: RoleBinding
        listKind: RoleBindingList
        plural: rolebindings
        singular: rolebinding
      scope: Namespaced
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              roleRef:
                description: |-
                  RoleRef can only reference a WorkspaceRole.
                  If the RoleRef cannot be resolved, the Authorizer must return an error.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              subjects:
                description: Subjects holds references to the objects the role applies
                  to.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - roleRef
            type: object
        served: true
        storage: true
  iam.kubesphere.io_roles.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: roles.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: Role
        listKind: RoleList
        plural: roles
        singular: role
      scope: Namespaced
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: Role is the Schema for the roles API
            properties:
              aggregationRoleTemplates:
                description: AggregationRoleTemplates means which RoleTemplates are composed
                  this Role
                properties:
                  roleSelector:
                    description: RoleSelectors select rules from RoleTemplate`s rules
                      by labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  templateNames:
                    description: TemplateNames select rules from RoleTemplate`s rules
                      by RoleTemplate name
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              rules:
                description: Rules holds all the PolicyRules for this WorkspaceRole
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that
                        the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
                        contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        served: true
        storage: true
  iam.kubesphere.io_roletemplates.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: roletemplates.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: RoleTemplate
        listKind: RoleTemplateList
        plural: roletemplates
        singular: roletemplate
      scope: Cluster
      versions:
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: RoleTemplate is the Schema for the roletemplates API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: RoleTemplateSpec defines the desired state of RoleTemplate
                properties:
                  description:
                    additionalProperties:
                      type: string
                    type: object
                  displayName:
                    additionalProperties:
                      type: string
                    description: DisplayName represent the name displays at console, this
                      field
                    type: object
                  rules:
                    items:
                      description: |-
                        PolicyRule holds information that describes a policy rule, but does not contain information
                        about who the rule applies to or which namespace the rule applies to.
                      properties:
                        apiGroups:
                          description: |-
                            APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                            the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                          items:
                            type: string
                          type: array
                        nonResourceURLs:
                          description: |-
                            NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                            Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                            Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                          items:
                            type: string
                          type: array
                        resourceNames:
                          description: ResourceNames is an optional white list of names
                            that the rule applies to.  An empty set means that everything
                            is allowed.
                          items:
                            type: string
                          type: array
                        resources:
                          description: Resources is a list of resources this rule applies
                            to. '*' represents all resources.
                          items:
                            type: string
                          type: array
                        verbs:
                          description: Verbs is a list of Verbs that apply to ALL the
                            ResourceKinds contained in this rule. '*' represents all verbs.
                          items:
                            type: string
                          type: array
                      required:
                      - verbs
                      type: object
                    type: array
                required:
                - rules
                type: object
            type: object
        served: true
        storage: true
  iam.kubesphere.io_users.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: users.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: User
        listKind: UserList
        plural: users
        singular: user
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.email
          name: Email
          type: string
        - jsonPath: .status.state
          name: Status
          type: string
        deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: User is the Schema for the users API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: UserSpec defines the desired state of User
                properties:
                  description:
                    description: Description of the user.
                    type: string
                  displayName:
                    type: string
                  email:
                    description: Unique email address(https://www.ietf.org/rfc/rfc5322.txt).
                    type: string
                  groups:
                    items:
                      type: string
                    type: array
                  lang:
                    description: The preferred written or spoken language for the user.
                    type: string
                  password:
                    description: |-
                      password will be encrypted by mutating admission webhook
                      Password pattern is tricky here.
                      The rule is simple: length between [6,64], at least one uppercase letter, one lowercase letter, one digit.
                      The regexp in console(javascript) is quite straightforward: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[^]{6,64}$
                      But in Go, we don't have ?= (back tracking) capability in regexp (also in CRD validation pattern)
                      So we adopted an alternative scheme to achieve.
                      Use 6 different regexp to combine to achieve the same effect.
                      These six schemes enumerate the arrangement of numbers, uppercase letters, and lowercase letters that appear for the first time.
                      - ^(.*[a-z].*[A-Z].*[0-9].*)$ stands for lowercase letter comes first, then followed by an uppercase letter, then a digit.
                      - ^(.*[a-z].*[0-9].*[A-Z].*)$ stands for lowercase letter comes first, then followed by a digit, then an uppercase leeter.
                      - ^(.*[A-Z].*[a-z].*[0-9].*)$ ...
                      - ^(.*[A-Z].*[0-9].*[a-z].*)$ ...
                      - ^(.*[0-9].*[a-z].*[A-Z].*)$ ...
                      - ^(.*[0-9].*[A-Z].*[a-z].*)$ ...
                      Last but not least, the bcrypt string is also included to match the encrypted password. ^(\$2[ayb]\$.{56})$
                    maxLength: 64
                    minLength: 8
                    pattern: ^(.*[a-z].*[A-Z].*[0-9].*)$|^(.*[a-z].*[0-9].*[A-Z].*)$|^(.*[A-Z].*[a-z].*[0-9].*)$|^(.*[A-Z].*[0-9].*[a-z].*)$|^(.*[0-9].*[a-z].*[A-Z].*)$|^(.*[0-9].*[A-Z].*[a-z].*)$|^(\$2[ayb]\$.{56})$
                    type: string
                required:
                - email
                type: object
              status:
                description: UserStatus defines the observed state of User
                properties:
                  lastLoginTime:
                    description: Last login attempt timestamp
                    format: date-time
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  state:
                    description: The user status
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: false
        subresources: {}
      - additionalPrinterColumns:
        - jsonPath: .spec.email
          name: Email
          type: string
        - jsonPath: .status.state
          name: Status
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: User is the Schema for the users API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: UserSpec defines the desired state of User
                properties:
                  description:
                    description: Description of the user.
                    type: string
                  displayName:
                    type: string
                  email:
                    description: Unique email address(https://www.ietf.org/rfc/rfc5322.txt).
                    type: string
                  groups:
                    items:
                      type: string
                    type: array
                  lang:
                    description: The preferred written or spoken language for the user.
                    type: string
                  password:
                    description: |-
                      password will be encrypted by mutating admission webhook
                      Password pattern is tricky here.
                      The rule is simple: length between [6,64], at least one uppercase letter, one lowercase letter, one digit.
                      The regexp in console(javascript) is quite straightforward: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[^]{6,64}$
                      But in Go, we don't have ?= (back tracking) capability in regexp (also in CRD validation pattern)
                      So we adopted an alternative scheme to achieve.
                      Use 6 different regexp to combine to achieve the same effect.
                      These six schemes enumerate the arrangement of numbers, uppercase letters, and lowercase letters that appear for the first time.
                      - ^(.*[a-z].*[A-Z].*[0-9].*)$ stands for lowercase letter comes first, then followed by an uppercase letter, then a digit.
                      - ^(.*[a-z].*[0-9].*[A-Z].*)$ stands for lowercase letter comes first, then followed by a digit, then an uppercase leeter.
                      - ^(.*[A-Z].*[a-z].*[0-9].*)$ ...
                      - ^(.*[A-Z].*[0-9].*[a-z].*)$ ...
                      - ^(.*[0-9].*[a-z].*[A-Z].*)$ ...
                      - ^(.*[0-9].*[A-Z].*[a-z].*)$ ...
                      Last but not least, the bcrypt string is also included to match the encrypted password. ^(\$2[ayb]\$.{56})$
                    maxLength: 64
                    minLength: 8
                    pattern: ^(.*[a-z].*[A-Z].*[0-9].*)$|^(.*[a-z].*[0-9].*[A-Z].*)$|^(.*[A-Z].*[a-z].*[0-9].*)$|^(.*[A-Z].*[0-9].*[a-z].*)$|^(.*[0-9].*[a-z].*[A-Z].*)$|^(.*[0-9].*[A-Z].*[a-z].*)$|^(\$2[ayb]\$.{56})$
                    type: string
                required:
                - email
                type: object
              status:
                description: UserStatus defines the observed state of User
                properties:
                  lastLoginTime:
                    description: Last login attempt timestamp
                    format: date-time
                    type: string
                  lastTransitionTime:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  state:
                    description: The user status
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
  iam.kubesphere.io_workspacerolebindings.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: workspacerolebindings.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: WorkspaceRoleBinding
        listKind: WorkspaceRoleBindingList
        plural: workspacerolebindings
        singular: workspacerolebinding
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            description: WorkspaceRoleBinding is the Schema for the workspacerolebindings
              API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              roleRef:
                description: |-
                  RoleRef can only reference a WorkspaceRole.
                  If the RoleRef cannot be resolved, the Authorizer must return an error.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              subjects:
                description: Subjects holds references to the objects the role applies
                  to.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - roleRef
            type: object
        served: true
        storage: false
        subresources: {}
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: WorkspaceRoleBinding is the Schema for the workspacerolebindings
              API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              roleRef:
                description: |-
                  RoleRef can only reference a WorkspaceRole.
                  If the RoleRef cannot be resolved, the Authorizer must return an error.
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
                x-kubernetes-map-type: atomic
              subjects:
                description: Subjects holds references to the objects the role applies
                  to.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            required:
            - roleRef
            type: object
        served: true
        storage: true
        subresources: {}
  iam.kubesphere.io_workspaceroles.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: workspaceroles.iam.kubesphere.io
    spec:
      group: iam.kubesphere.io
      names:
        categories:
        - iam
        kind: WorkspaceRole
        listKind: WorkspaceRoleList
        plural: workspaceroles
        singular: workspacerole
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        - jsonPath: .metadata.annotations.kubesphere\.io/alias-name
          name: Alias
          type: string
        deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              rules:
                description: Rules holds all the PolicyRules for this WorkspaceRole
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that
                        the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
                        contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        served: true
        storage: false
        subresources: {}
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels.kubesphere\.io/workspace
          name: Workspace
          type: string
        - jsonPath: .metadata.annotations.kubesphere\.io/alias-name
          name: Alias
          type: string
        name: v1beta1
        schema:
          openAPIV3Schema:
            description: WorkspaceRole is the Schema for the workspaceroles API
            properties:
              aggregationRoleTemplates:
                description: AggregationRoleTemplates means which RoleTemplates are composed
                  this Role
                properties:
                  roleSelector:
                    description: RoleSelectors select rules from RoleTemplate`s rules
                      by labels
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  templateNames:
                    description: TemplateNames select rules from RoleTemplate`s rules
                      by RoleTemplate name
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                type: object
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              rules:
                description: Rules holds all the PolicyRules for this WorkspaceRole
                items:
                  description: |-
                    PolicyRule holds information that describes a policy rule, but does not contain information
                    about who the rule applies to or which namespace the rule applies to.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                        the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                      items:
                        type: string
                      type: array
                    nonResourceURLs:
                      description: |-
                        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                        Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                        Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                      items:
                        type: string
                      type: array
                    resourceNames:
                      description: ResourceNames is an optional white list of names that
                        the rule applies to.  An empty set means that everything is allowed.
                      items:
                        type: string
                      type: array
                    resources:
                      description: Resources is a list of resources this rule applies
                        to. '*' represents all resources.
                      items:
                        type: string
                      type: array
                    verbs:
                      description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
                        contained in this rule. '*' represents all verbs.
                      items:
                        type: string
                      type: array
                  required:
                  - verbs
                  type: object
                type: array
            type: object
        served: true
        storage: true
        subresources: {}
  kubesphere.io_categories.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: categories.kubesphere.io
    spec:
      group: kubesphere.io
      names:
        categories:
        - extensions
        kind: Category
        listKind: CategoryList
        plural: categories
        singular: category
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: Category can help us group the extensions.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  description:
                    additionalProperties:
                      type: string
                    type: object
                  displayName:
                    additionalProperties:
                      type: string
                    type: object
                  icon:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  kubesphere.io_extensions.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: extensions.kubesphere.io
    spec:
      group: kubesphere.io
      names:
        categories:
        - extensions
        kind: Extension
        listKind: ExtensionList
        plural: extensions
        singular: extension
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: |-
              Extension is synchronized from the Repository.
              An extension can contain multiple versions.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ExtensionSpec only contains basic extension information copied
                  from the latest ExtensionVersion.
                properties:
                  created:
                    format: date-time
                    type: string
                  description:
                    additionalProperties:
                      type: string
                    type: object
                  displayName:
                    additionalProperties:
                      type: string
                    type: object
                  icon:
                    type: string
                  provider:
                    additionalProperties:
                      description: Provider describes an extension provider.
                      properties:
                        email:
                          description: Email is an optional email address to contact the
                            named provider
                          type: string
                        name:
                          description: Name is a username or organization name
                          type: string
                        url:
                          description: URL is an optional URL to an address for the named
                            provider
                          type: string
                      type: object
                    type: object
                type: object
              status:
                properties:
                  clusterSchedulingStatuses:
                    additionalProperties:
                      properties:
                        conditions:
                          items:
                            description: "Condition contains details for one aspect of
                              the current state of this API Resource.\n---\nThis struct
                              is intended for direct use as an array at the field path
                              .status.conditions.  For example,\n\n\n\ttype FooStatus
                              struct{\n\t    // Represents the observations of a foo's
                              current state.\n\t    // Known .status.conditions.type are:
                              \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                              +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                              +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                              []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                              patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                              \   // other fields\n\t}"
                            properties:
                              lastTransitionTime:
                                description: |-
                                  lastTransitionTime is the last time the condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  message is a human readable message indicating details about the transition.
                                  This may be an empty string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: |-
                                  observedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: |-
                                  reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define expected values and meanings for this field,
                                  and whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string.
                                  This field may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True, False,
                                  Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: |-
                                  type of condition in CamelCase or in foo.example.com/CamelCase.
                                  ---
                                  Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                                  useful (see .node.status.conditions), the ability to deconflict is important.
                                  The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        configHash:
                          type: string
                        jobName:
                          type: string
                        releaseName:
                          type: string
                        state:
                          type: string
                        stateHistory:
                          items:
                            properties:
                              lastTransitionTime:
                                format: date-time
                                type: string
                              state:
                                type: string
                            required:
                            - lastTransitionTime
                            - state
                            type: object
                          type: array
                        targetNamespace:
                          type: string
                        version:
                          type: string
                      type: object
                    description: ClusterSchedulingStatuses describes the subchart installation
                      status of the extension
                    type: object
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the current
                        state of this API Resource.\n---\nThis struct is intended for
                        direct use as an array at the field path .status.conditions.  For
                        example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                        observations of a foo's current state.\n\t    // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                        +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                        \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  enabled:
                    type: boolean
                  installedVersion:
                    type: string
                  plannedInstallVersion:
                    type: string
                  recommendedVersion:
                    type: string
                  state:
                    type: string
                  versions:
                    items:
                      properties:
                        creationTimestamp:
                          format: date-time
                          type: string
                        version:
                          type: string
                      required:
                      - version
                      type: object
                    type: array
                type: object
            type: object
        served: true
        storage: true
        subresources: {}
  kubesphere.io_extensionversions.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: extensionversions.kubesphere.io
    spec:
      group: kubesphere.io
      names:
        categories:
        - extensions
        kind: ExtensionVersion
        listKind: ExtensionVersionList
        plural: extensionversions
        singular: extensionversion
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ExtensionVersionSpec contains the details of a specific version
                  extension.
                properties:
                  category:
                    type: string
                  chartDataRef:
                    description: ChartDataRef refers to a configMap which contains raw
                      chart data.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                      namespace:
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    - namespace
                    type: object
                    x-kubernetes-map-type: atomic
                  chartURL:
                    type: string
                  created:
                    format: date-time
                    type: string
                  description:
                    additionalProperties:
                      type: string
                    type: object
                  digest:
                    type: string
                  displayName:
                    additionalProperties:
                      type: string
                    type: object
                  docs:
                    type: string
                  externalDependencies:
                    description: ExternalDependencies
                    items:
                      properties:
                        name:
                          description: Name of the external dependency
                          type: string
                        required:
                          description: Indicates if the dependency is required
                          type: boolean
                        type:
                          description: Type of dependency, defaults to extension
                          type: string
                        version:
                          description: SemVer
                          type: string
                      required:
                      - name
                      - required
                      - version
                      type: object
                    type: array
                  home:
                    type: string
                  icon:
                    type: string
                  installationMode:
                    default: HostOnly
                    enum:
                    - HostOnly
                    - Multicluster
                    type: string
                  keywords:
                    items:
                      type: string
                    type: array
                  ksVersion:
                    description: |-
                      KSVersion is a SemVer constraint specifying the version of KubeSphere required.
                      eg: >= 1.2.0, see https://github.com/Masterminds/semver for more info.
                    type: string
                  kubeVersion:
                    description: |-
                      KubeVersion is a SemVer constraint specifying the version of Kubernetes required.
                      eg: >= 1.2.0, see https://github.com/Masterminds/semver for more info.
                    type: string
                  namespace:
                    description: |-
                      Namespace represents the namespace in which the extension is installed.
                      If empty, it will be installed in the namespace named extension-{name}.
                    type: string
                  provider:
                    additionalProperties:
                      description: Provider describes an extension provider.
                      properties:
                        email:
                          description: Email is an optional email address to contact the
                            named provider
                          type: string
                        name:
                          description: Name is a username or organization name
                          type: string
                        url:
                          description: URL is an optional URL to an address for the named
                            provider
                          type: string
                      type: object
                    type: object
                  repository:
                    type: string
                  screenshots:
                    items:
                      type: string
                    type: array
                  sources:
                    items:
                      type: string
                    type: array
                  version:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  kubesphere.io_installplans.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: installplans.kubesphere.io
    spec:
      group: kubesphere.io
      names:
        categories:
        - extensions
        kind: InstallPlan
        listKind: InstallPlanList
        plural: installplans
        singular: installplan
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: InstallPlan defines how to install an extension in the cluster.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterScheduling:
                    properties:
                      overrides:
                        additionalProperties:
                          type: string
                        type: object
                      placement:
                        properties:
                          clusterSelector:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          clusters:
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        type: object
                    type: object
                  config:
                    type: string
                  enabled:
                    type: boolean
                  extension:
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                    required:
                    - name
                    - version
                    type: object
                  upgradeStrategy:
                    default: Manual
                    type: string
                required:
                - enabled
                - extension
                type: object
              status:
                properties:
                  clusterSchedulingStatuses:
                    additionalProperties:
                      properties:
                        conditions:
                          items:
                            description: "Condition contains details for one aspect of
                              the current state of this API Resource.\n---\nThis struct
                              is intended for direct use as an array at the field path
                              .status.conditions.  For example,\n\n\n\ttype FooStatus
                              struct{\n\t    // Represents the observations of a foo's
                              current state.\n\t    // Known .status.conditions.type are:
                              \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                              +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                              +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                              []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                              patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                              \   // other fields\n\t}"
                            properties:
                              lastTransitionTime:
                                description: |-
                                  lastTransitionTime is the last time the condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  message is a human readable message indicating details about the transition.
                                  This may be an empty string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: |-
                                  observedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: |-
                                  reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define expected values and meanings for this field,
                                  and whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string.
                                  This field may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True, False,
                                  Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: |-
                                  type of condition in CamelCase or in foo.example.com/CamelCase.
                                  ---
                                  Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                                  useful (see .node.status.conditions), the ability to deconflict is important.
                                  The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        configHash:
                          type: string
                        jobName:
                          type: string
                        releaseName:
                          type: string
                        state:
                          type: string
                        stateHistory:
                          items:
                            properties:
                              lastTransitionTime:
                                format: date-time
                                type: string
                              state:
                                type: string
                            required:
                            - lastTransitionTime
                            - state
                            type: object
                          type: array
                        targetNamespace:
                          type: string
                        version:
                          type: string
                      type: object
                    description: ClusterSchedulingStatuses describes the subchart installation
                      status of the extension
                    type: object
                  conditions:
                    items:
                      description: "Condition contains details for one aspect of the current
                        state of this API Resource.\n---\nThis struct is intended for
                        direct use as an array at the field path .status.conditions.  For
                        example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                        observations of a foo's current state.\n\t    // Known .status.conditions.type
                        are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                        +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                        \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                        patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                        \   // other fields\n\t}"
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False, Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: |-
                            type of condition in CamelCase or in foo.example.com/CamelCase.
                            ---
                            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                            useful (see .node.status.conditions), the ability to deconflict is important.
                            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  configHash:
                    type: string
                  enabled:
                    type: boolean
                  jobName:
                    type: string
                  releaseName:
                    type: string
                  state:
                    type: string
                  stateHistory:
                    items:
                      properties:
                        lastTransitionTime:
                          format: date-time
                          type: string
                        state:
                          type: string
                      required:
                      - lastTransitionTime
                      - state
                      type: object
                    type: array
                  targetNamespace:
                    type: string
                  version:
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources: {}
  kubesphere.io_repositories.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: repositories.kubesphere.io
    spec:
      group: kubesphere.io
      names:
        categories:
        - extensions
        kind: Repository
        listKind: RepositoryList
        plural: repositories
        singular: repository
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: |-
              Repository declared a docker image containing the extension helm chart.
              The extension manager controller will deploy and synchronizes the extensions from the image repository.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  basicAuth:
                    properties:
                      password:
                        type: string
                      username:
                        type: string
                    type: object
                  caBundle:
                    description: if the caBundle is empty, use --insecure-skip-tls-verify.
                    type: string
                  description:
                    type: string
                  image:
                    type: string
                  updateStrategy:
                    properties:
                      registryPoll:
                        properties:
                          interval:
                            type: string
                        required:
                        - interval
                        type: object
                    type: object
                  url:
                    type: string
                type: object
              status:
                properties:
                  lastSyncTime:
                    format: date-time
                    type: string
                type: object
            type: object
        served: true
        storage: true
  kubesphere.io_serviceaccounts.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: serviceaccounts.kubesphere.io
    spec:
      group: kubesphere.io
      names:
        kind: ServiceAccount
        listKind: ServiceAccountList
        plural: serviceaccounts
        singular: serviceaccount
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              secrets:
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
  
  
                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        served: true
        storage: true
  marketplace.kubesphere.io_subscriptions.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: subscriptions.marketplace.kubesphere.io
    spec:
      group: marketplace.kubesphere.io
      names:
        categories:
        - marketplace
        kind: Subscription
        listKind: SubscriptionList
        plural: subscriptions
        singular: subscription
      scope: Cluster
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  extensionName:
                    type: string
                required:
                - extensionName
                type: object
              status:
                properties:
                  createdAt:
                    format: date-time
                    type: string
                  expiredAt:
                    format: date-time
                    type: string
                  extensionID:
                    type: string
                  extraInfo:
                    type: string
                  orderID:
                    type: string
                  startedAt:
                    format: date-time
                    type: string
                  subscriptionID:
                    type: string
                  updatedAt:
                    format: date-time
                    type: string
                  userID:
                    type: string
                  userSubscriptionID:
                    type: string
                required:
                - createdAt
                - expiredAt
                - extensionID
                - extraInfo
                - orderID
                - startedAt
                - subscriptionID
                - updatedAt
                - userID
                - userSubscriptionID
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
  quota.kubesphere.io_resourcequotas.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: resourcequotas.quota.kubesphere.io
    spec:
      group: quota.kubesphere.io
      names:
        categories:
        - quota
        kind: ResourceQuota
        listKind: ResourceQuotaList
        plural: resourcequotas
        singular: resourcequota
      scope: Cluster
      versions:
      - name: v1alpha2
        schema:
          openAPIV3Schema:
            description: ResourceQuota sets aggregate quota restrictions enforced per
              workspace
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: Spec defines the desired quota
                properties:
                  quota:
                    description: Quota defines the desired quota
                    properties:
                      hard:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          hard is the set of desired hard limits for each named resource.
                          More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
                        type: object
                      scopeSelector:
                        description: |-
                          scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota
                          but expressed using ScopeSelectorOperator in combination with possible values.
                          For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.
                        properties:
                          matchExpressions:
                            description: A list of scope selector requirements by scope
                              of the resources.
                            items:
                              description: |-
                                A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator
                                that relates the scope name and values.
                              properties:
                                operator:
                                  description: |-
                                    Represents a scope's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists, DoesNotExist.
                                  type: string
                                scopeName:
                                  description: The name of the scope that the selector
                                    applies to.
                                  type: string
                                values:
                                  description: |-
                                    An array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty.
                                    This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - operator
                              - scopeName
                              type: object
                            type: array
                        type: object
                        x-kubernetes-map-type: atomic
                      scopes:
                        description: |-
                          A collection of filters that must match each object tracked by a quota.
                          If not specified, the quota matches all objects.
                        items:
                          description: A ResourceQuotaScope defines a filter that must
                            match each object tracked by a quota
                          type: string
                        type: array
                    type: object
                  selector:
                    additionalProperties:
                      type: string
                    description: LabelSelector is used to select projects by label.
                    type: object
                required:
                - quota
                - selector
                type: object
              status:
                description: Status defines the actual enforced quota and its current
                  usage
                properties:
                  namespaces:
                    description: Namespaces slices the usage by project.
                    items:
                      description: ResourceQuotaStatusByNamespace gives status for a particular
                        project
                      properties:
                        hard:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Hard is the set of enforced hard limits for each named resource.
                            More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
                          type: object
                        namespace:
                          description: Namespace the project this status applies to
                          type: string
                        used:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Used is the current observed total usage of the
                            resource in the namespace.
                          type: object
                      required:
                      - namespace
                      type: object
                    type: array
                  total:
                    description: Total defines the actual enforced quota and its current
                      usage across all projects
                    properties:
                      hard:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Hard is the set of enforced hard limits for each named resource.
                          More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
                        type: object
                      used:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: Used is the current observed total usage of the resource
                          in the namespace.
                        type: object
                    type: object
                required:
                - namespaces
                - total
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  storage.kubesphere.io_provisionercapabilities.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: provisionercapabilities.storage.kubesphere.io
    spec:
      group: storage.kubesphere.io
      names:
        kind: ProvisionerCapability
        listKind: ProvisionerCapabilityList
        plural: provisionercapabilities
        singular: provisionercapability
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.pluginInfo.name
          name: Provisioner
          type: string
        - jsonPath: .spec.features.volume.expandMode
          name: Expand
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: ProvisionerCapability is the schema for the provisionercapability
              API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ProvisionerCapabilitySpec defines the desired state of ProvisionerCapability
                properties:
                  features:
                    description: CapabilityFeatures describe storage features
                    properties:
                      snapshot:
                        description: SnapshotFeature describe snapshot features
                        properties:
                          create:
                            type: boolean
                          list:
                            type: boolean
                        required:
                        - create
                        - list
                        type: object
                      topology:
                        type: boolean
                      volume:
                        description: VolumeFeature describe volume features
                        properties:
                          attach:
                            type: boolean
                          clone:
                            type: boolean
                          create:
                            type: boolean
                          expandMode:
                            type: string
                          list:
                            type: boolean
                          stats:
                            type: boolean
                        required:
                        - attach
                        - clone
                        - create
                        - expandMode
                        - list
                        - stats
                        type: object
                    required:
                    - snapshot
                    - topology
                    - volume
                    type: object
                  pluginInfo:
                    description: PluginInfo describes plugin info
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                    required:
                    - name
                    - version
                    type: object
                required:
                - features
                - pluginInfo
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
  storage.kubesphere.io_storageclasscapabilities.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: storageclasscapabilities.storage.kubesphere.io
    spec:
      group: storage.kubesphere.io
      names:
        kind: StorageClassCapability
        listKind: StorageClassCapabilityList
        plural: storageclasscapabilities
        singular: storageclasscapability
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.provisioner
          name: Provisioner
          type: string
        - jsonPath: .spec.features.volume.create
          name: Volume
          type: boolean
        - jsonPath: .spec.features.volume.expandMode
          name: Expand
          type: string
        - jsonPath: .spec.features.volume.clone
          name: Clone
          type: boolean
        - jsonPath: .spec.features.snapshot.create
          name: Snapshot
          type: boolean
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: StorageClassCapability is the Schema for the storage class capability
              API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: StorageClassCapabilitySpec defines the desired state of StorageClassCapability
                properties:
                  features:
                    description: CapabilityFeatures describe storage features
                    properties:
                      snapshot:
                        description: SnapshotFeature describe snapshot features
                        properties:
                          create:
                            type: boolean
                          list:
                            type: boolean
                        required:
                        - create
                        - list
                        type: object
                      topology:
                        type: boolean
                      volume:
                        description: VolumeFeature describe volume features
                        properties:
                          attach:
                            type: boolean
                          clone:
                            type: boolean
                          create:
                            type: boolean
                          expandMode:
                            type: string
                          list:
                            type: boolean
                          stats:
                            type: boolean
                        required:
                        - attach
                        - clone
                        - create
                        - expandMode
                        - list
                        - stats
                        type: object
                    required:
                    - snapshot
                    - topology
                    - volume
                    type: object
                  provisioner:
                    type: string
                required:
                - features
                - provisioner
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources: {}
  telemetry.kubesphere.io_clusterinfoes.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: clusterinfoes.telemetry.kubesphere.io
    spec:
      group: telemetry.kubesphere.io
      names:
        kind: ClusterInfo
        listKind: ClusterInfoList
        plural: clusterinfoes
        singular: clusterinfo
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.pluginInfo.name
          name: Provisioner
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            description: ClusterInfo is the Schema for the clusterinfos API. the API is
              use to store telemetry data.
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: ClusterInfoSpec nothing in Spec. only use collect cluster
                  telemetry data
                type: object
              status:
                description: ClusterInfoStatus store cluster telemetry data
                properties:
                  cloudId:
                    description: kubesphere cloud id
                    type: string
                  clusters:
                    description: cluster info which kubesphere use. refer to clusters.cluster.kubesphere.io
                    items:
                      properties:
                        clusterVersion:
                          description: kubernetes cluster version
                          type: string
                        ksVersion:
                          description: kubesphere version
                          type: string
                        name:
                          description: cluster name
                          type: string
                        namespace:
                          description: Namepace number of cluster
                          type: integer
                        nid:
                          description: cluster namespace id
                          type: string
                        nodes:
                          description: nodes of cluster
                          items:
                            properties:
                              arch:
                                description: node arch
                                type: string
                              containerRuntime:
                                description: node containerRuntime
                                type: string
                              kernel:
                                description: node kernel
                                type: string
                              kubeProxy:
                                description: node kubeProxy
                                type: string
                              kubelet:
                                description: node kubelet
                                type: string
                              name:
                                description: node name
                                type: string
                              os:
                                description: node operator system
                                type: string
                              osImage:
                                description: os operator system image
                                type: string
                              role:
                                description: node roles
                                items:
                                  type: string
                                type: array
                              uid:
                                description: node uid
                                type: string
                            type: object
                          type: array
                        role:
                          description: cluster role
                          type: string
                        uid:
                          description: cluster uid
                          type: string
                      type: object
                    type: array
                  extension:
                    description: extension which cluster has installed. refer to subscriptions.kubesphere.io
                    items:
                      properties:
                        cTime:
                          description: extension create time
                          type: string
                        name:
                          description: extension name
                          type: string
                        version:
                          description: extension version
                          type: string
                      type: object
                    type: array
                  platform:
                    description: the platform resources total.
                    properties:
                      user:
                        description: user number of cluster
                        type: integer
                      workspace:
                        description: workspace number of cluster
                        type: integer
                    type: object
                  syncTime:
                    description: when to sync data to ksCloud
                    format: date-time
                    type: string
                  ts:
                    description: collection time
                    format: date-time
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  tenant.kubesphere.io_workspaces.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: workspaces.tenant.kubesphere.io
    spec:
      group: tenant.kubesphere.io
      names:
        categories:
        - tenant
        kind: Workspace
        listKind: WorkspaceList
        plural: workspaces
        singular: workspace
      scope: Cluster
      versions:
      - deprecated: true
        name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  manager:
                    type: string
                  networkIsolation:
                    type: boolean
                type: object
              status:
                type: object
            type: object
        served: true
        storage: false
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: Workspace is the Schema for the workspaces API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                description: WorkspaceSpec defines the desired state of Workspace
                properties:
                  manager:
                    type: string
                type: object
              status:
                description: WorkspaceStatus defines the observed state of Workspace
                type: object
            type: object
        served: true
        storage: true
  tenant.kubesphere.io_workspacetemplates.yaml: |
    ---
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: (unknown)
      name: workspacetemplates.tenant.kubesphere.io
    spec:
      group: tenant.kubesphere.io
      names:
        categories:
        - tenant
        kind: WorkspaceTemplate
        listKind: WorkspaceTemplateList
        plural: workspacetemplates
        singular: workspacetemplate
      scope: Cluster
      versions:
      - deprecated: true
        name: v1alpha2
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  overrides:
                    items:
                      properties:
                        clusterName:
                          type: string
                        clusterOverrides:
                          items:
                            properties:
                              op:
                                type: string
                              path:
                                type: string
                              value:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            required:
                            - path
                            type: object
                          type: array
                      required:
                      - clusterName
                      type: object
                    type: array
                  placement:
                    properties:
                      clusterSelector:
                        description: |-
                          A label selector is a label query over a set of resources. The result of matchLabels and
                          matchExpressions are ANDed. An empty label selector matches all objects. A null
                          label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      clusters:
                        items:
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  template:
                    properties:
                      metadata:
                        type: object
                      spec:
                        description: WorkspaceSpec defines the desired state of Workspace
                        properties:
                          manager:
                            type: string
                        type: object
                    type: object
                required:
                - placement
                - template
                type: object
            type: object
        served: true
        storage: false
      - name: v1beta1
        schema:
          openAPIV3Schema:
            description: WorkspaceTemplate is the Schema for the workspacetemplates API
            properties:
              apiVersion:
                description: |-
                  APIVersion defines the versioned schema of this representation of an object.
                  Servers should convert recognized schemas to the latest internal value, and
                  may reject unrecognized values.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                type: string
              kind:
                description: |-
                  Kind is a string value representing the REST resource this object represents.
                  Servers may infer this from the endpoint the client submits requests to.
                  Cannot be updated.
                  In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
              metadata:
                type: object
              spec:
                properties:
                  placement:
                    properties:
                      clusterSelector:
                        description: |-
                          A label selector is a label query over a set of resources. The result of matchLabels and
                          matchExpressions are ANDed. An empty label selector matches all objects. A null
                          label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      clusters:
                        items:
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                  template:
                    properties:
                      metadata:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      spec:
                        description: WorkspaceSpec defines the desired state of Workspace
                        properties:
                          manager:
                            type: string
                        type: object
                    type: object
                required:
                - placement
                - template
                type: object
            type: object
        served: true
        storage: true
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "ks-core-post-delete-scripts"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
data:
  map.yaml: |
    mappings:
  post-delete.sh: |-
    #!/usr/bin/env bash
  
    # set -x
  
    CRD_NAMES=$1
    MAPPING_CONFIG=$2
  
    for extension in `kubectl get installplan -o json | jq -r '.items[] | select(.status.state == "Installed") | .metadata.name'`
    do
      namespace=$(kubectl get installplan $extension -o=jsonpath='{.status.targetNamespace}')
      version=$(kubectl get extension $extension -o=jsonpath='{.status.installedVersion}')
      extensionversion=$extension-$version
      echo "Found extension $extensionversion installed"
      helm status $extension --namespace $namespace
      if [ $? -eq 0 ]; then
        helm mapkubeapis $extension --namespace $namespace --mapfile $MAPPING_CONFIG
      fi
      helm status $extension-agent --namespace $namespace
      if [ $? -eq 0 ]; then
        helm mapkubeapis $extension-agent --namespace $namespace --mapfile $MAPPING_CONFIG
      fi
    done
  
  
    # remove namespace's finalizers && ownerReferences
    kubectl patch workspaces.tenant.kubesphere.io system-workspace -p '{"metadata":{"finalizers":[]}}' --type=merge
    kubectl patch workspacetemplates.tenant.kubesphere.io system-workspace -p '{"metadata":{"finalizers":[]}}' --type=merge
    for ns in $(kubectl get ns -o jsonpath='{.items[*].metadata.name}' -l 'kubesphere.io/managed=true')
    do
      kubectl label ns $ns kubesphere.io/workspace- && \
      kubectl patch ns $ns -p '{"metadata":{"ownerReferences":[]}}' --type=merge && \
      echo "{\"kind\":\"Namespace\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"$ns\",\"finalizers\":null}}" | kubectl replace --raw "/api/v1/namespaces/$ns/finalize" -f -
    done
  
  
    # delete crds
    for crd in `kubectl get crds -o jsonpath="{.items[*].metadata.name}"`
    do
      if [[ ${CRD_NAMES[@]/${crd}/} != ${CRD_NAMES[@]} ]]; then
         scop=$(eval echo $(kubectl get crd ${crd} -o jsonpath="{.spec.scope}"))
         if [[ $scop =~ "Namespaced" ]] ; then
            kubectl get $crd -A --no-headers | awk '{print $1" "$2" ""'$crd'"}' | xargs -n 3 sh -c 'kubectl patch $2 -n $0 $1 -p "{\"metadata\":{\"finalizers\":null}}" --type=merge 2>/dev/null && kubectl delete $2 -n $0 $1 2>/dev/null'
         else
            kubectl get $crd -A --no-headers | awk '{print $1" ""'$crd'"}' | xargs -n 2 sh -c 'kubectl patch $1 $0 -p "{\"metadata\":{\"finalizers\":null}}" --type=merge 2>/dev/null && kubectl delete $1 $0 2>/dev/null'
         fi
         kubectl delete crd $crd 2>/dev/null;
      fi
    done
  
  
    EXTENSION_RELATED_RESOURCES='jobs.batch roles.rbac.authorization.k8s.io rolebindings.rbac.authorization.k8s.io clusterroles.rbac.authorization.k8s.io clusterrolebindings.rbac.authorization.k8s.io'
  
    for resource in $EXTENSION_RELATED_RESOURCES;do
      echo "kubectl delete $resource -l kubesphere.io/extension-ref --all-namespaces"
      kubectl delete $resource -l kubesphere.io/managed=true --all-namespaces
    done
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "ks-core-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: "ks-core-post-delete"
    namespace: kubesphere-system
---
# Source: ks-core/charts/ksCRDs/templates/pre-upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "ks-core-ks-crds-pre-upgrade"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: crd-install
          image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
          command:
            - /bin/bash
            - /scripts/install.sh
            - /scripts
          volumeMounts:
            - mountPath: /scripts
              name: scripts
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
      volumes:
        - name: scripts
          configMap:
            name: "ks-core-ks-crds-pre-upgrade-scripts"
            defaultMode: 420
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "ks-core-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: "ks-core-post-delete"
      containers:
        - name: post-delete-job
          image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
          command:
            - /bin/bash
            - /scripts/post-delete.sh
            - ''
            - /scripts/map.yaml
          volumeMounts:
            - mountPath: /scripts
              name: scripts
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
      volumes:
        - name: scripts
          configMap:
            name: "ks-core-post-delete-scripts"
            defaultMode: 420
---
# Source: ks-core/templates/post-patch-system-ns-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "ks-core-post-patch-system-ns"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: post-patch-system-ns
          image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
          command:
            - /bin/bash
            - -c
            - |
              kubectl create namespace kubesphere-controls-system --dry-run=client -o yaml | kubectl apply -f -
              for ns in kubesphere-system kubesphere-controls-system default kube-node-lease kube-public kube-system;
              do
                kubectl label ns $ns kubesphere.io/workspace=system-workspace
                kubectl label ns $ns kubesphere.io/managed=true
              done
              kubectl get ns -l 'kubesphere.io/workspace,!kubesphere.io/managed' --no-headers -o custom-columns=NAME:.metadata.name | \
              xargs -I {} kubectl label ns {} kubesphere.io/managed=true
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
MANIFEST:
---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesphere
  namespace: kubesphere-system
  labels:
    helm.sh/chart: ks-core-1.1.0
    app.kubernetes.io/name: ks-core
    app.kubernetes.io/instance: ks-core
    app.kubernetes.io/version: "v4.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: ks-core/templates/customresourcefilters.yaml
apiVersion: v1
stringData:
  configuration.yaml: |
    resource:
      group: "kubesphere.io"
      version: "v1alpha1"
      kind: "Extension"
    regoPolicy: |
      package filter
      
      import rego.v1
      
      default match := false
      
      match if {
      	not listAvailableExtension
      	not fuzzySearch
      	not installStatusSearch
      	not enabledStatusSearch
      }
      
      match if {
      	listAvailableExtension
      	isSubscribed
      }
      
      match if {
      	listAvailableExtension
      	alreadyInstalled
      }
      
      match if {
      	listAvailableExtension
      	not hasExtensionID
      }
      
      match if {
      	fuzzySearch
      	displayNameMatch
      }
      
      match if {
      	installStatusSearch
      	installStatusMatch
      }
      
      match if {
      	installStatusSearch
      	installedStatusMatch
      }
      
      match if {
      	enabledStatusSearch
      	enabledStatusMatch
      }
      
      match if {
      	installStatusSearch
      	notInstalledStatusMatch
      }
      
      fuzzySearch if "q" == input.filter.field
      
      installStatusSearch if "status" == input.filter.field
      
      enabledStatusSearch if "enabled" == input.filter.field
      
      listAvailableExtension if "available" == input.filter.field
      
      isSubscribed if input.object.metadata.labels["marketplace.kubesphere.io/subscribed"] == "true"
      
      alreadyInstalled if input.object.status.state != ""
      
      hasExtensionID if input.object.metadata.labels["marketplace.kubesphere.io/extension-id"] != ""
      
      displayNameMatch if {
      	contains(lower(input.object.spec.displayName[_]), lower(input.filter.value))
      }
      
      nameMatch if {
      	contains(lower(input.object.metadata.name), lower(input.filter.value))
      }
      
      installStatusMatch if {
      	lower(input.object.status.state) == lower(input.filter.value)
      }
      
      installedStatusMatch if {
      	input.filter.value == "installed"
      	"Installed" == input.object.status.state
      }
      
      enabledStatusMatch if {
      	alreadyInstalled
      	input.filter.value == "true"
      	input.object.status.enabled
      }
      
      enabledStatusMatch if {
      	alreadyInstalled
      	input.filter.value == "false"
      	not input.object.status.enabled
      }
      
      notInstalledStatusMatch if {
          input.filter.value == "notInstalled"
          not alreadyInstalled
      }
      
kind: Secret
metadata:
  name: extensions.customresourcefilters
  namespace: kubesphere-system
type: config.kubesphere.io/custom-resource-filter
---
# Source: ks-core/templates/oauthclient-config.yaml
apiVersion: v1
stringData:
  configuration.yaml: |
    name: kubesphere
    secret: kubesphere
    grantMethod: auto
    trusted: true
    scopeRestrictions:
      - 'openid'
      - 'email'
      - 'profile'
kind: Secret
metadata:
  name: oauthclient-kubesphere
  namespace: kubesphere-system
  labels:
    config.kubesphere.io/type: oauthclient
type: config.kubesphere.io/oauthclient
---
# Source: ks-core/templates/webhook.yaml
apiVersion: v1
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpakNDQW5LZ0F3SUJBZ0lRSzAvYzFDOWZ3RnB5dXFSaTVtLzZNVEFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQ1F4SWpBZ0JnTlZCQU1UR1d0ekxXTnZjbVV0WVdSdGFYTnphVzl1TFhkbFltaHZiMnN3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDcnpqblpMcEZKanJ5V2oyZlVsU2IKUEkzOElpRDVTWjZiT3NwWHc4L2hDV3lXUFZpWEd0TjN1SHBvYlZ1eVlBczh5aU1VcVZGYVg3MVpReVlnLzlwSwpHektrS2ZhRUJXZysrMG1URXgyazVmYWlKMkxncU04WnpFUlpDekdJNVJrblQ0WDVPajZuS1pRdHNzUWh1YUd3CnhubU8ycUNYSFFrMy9Eb1RWVGFLOSt6UW04Q05XbWkxUGJPNzRtdHR5U0Y5TENkV3VGRmp2Y1NEb3N3VnBxc08KRC81TlpuRVo5bXdjTnpOWDh6VSs1WmNUYmphVDVucDM5UHdvYkFLNytxSXdhNUlHYisrbEhFQ2Y5bnRhMS91bAp3d0ZmU3FvSlhkUzlkRm4yRXI0MmFORnpUQXY5bXhLOVNGSUhYOWxndjNYb09nZmN1R2U2cllQaXU5bWNwTTNYCkFnTUJBQUdqZ2NJd2diOHdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRklQRE5ldmlERWhOSG9FWApsQ3ozRFR5Q3BqY2xNRjhHQTFVZEVRUllNRmFDSjJ0ekxXTnZiblJ5YjJ4c1pYSXRiV0Z1WVdkbGNpNXJkV0psCmMzQm9aWEpsTFhONWMzUmxiWUlyYTNNdFkyOXVkSEp2Ykd4bGNpMXRZVzVoWjJWeUxtdDFZbVZ6Y0dobGNtVXQKYzNsemRHVnRMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVpUWVBMOWNxVWgxRHRWcWlWdUthN3d1QgpzckFHd3J6cGtGeHI1dWZlK1c1K2twL0V1TkhJWEFpdnk4VjJRK0Z3bHB1ZnlkbWNEY3dOWmd4MDdaQXVENXQ3CnkrWTBiS3g2dkRjWkFpYm1zTGllRlAwU2VucEZ5eWZvZVJJbmVGN3NhT1BTNkFaTUNRaUpKcTBrOHR4eWRidFYKUlRRam1WVVM3Y05EUlc0Y01NS0RZSFBvU01rOXpaRlpmaVJ1SEZXWFJDdDlNNksvWko3RU1OUGNaMC8zUmJNVwpYeEMxeEhnK0dzMU4xeXRMNU1zU2tqZnB6NFBWRC9ZMXIzTnU3Z1QwaHEyNlFGNldSTFdITmtnODFON3FveXE0CkZuTzlyc1N0aitCMDRXMlBBVGlSM3Jyc2kzaWU1SktaNmxGc1VqdTJUZWpWclp0VXhVNlBTMU9CQ2RqczZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3E4NDUyUzZSU1k2OGxvOW4xSlVtenlOL0NJZytVbWVtenJLVjhQUDRRbHNsajFZCmx4clRkN2g2YUcxYnNtQUxQTW9qRktsUldsKzlXVU1tSVAvYVNoc3lwQ24yaEFWb1B2dEpreE1kcE9YMm9pZGkKNEtqUEdjeEVXUXN4aU9VWkowK0YrVG8rcHltVUxiTEVJYm1oc01aNWp0cWdseDBKTi93NkUxVTJpdmZzMEp2QQpqVnBvdFQyenUrSnJiY2toZlN3blZyaFJZNzNFZzZMTUZhYXJEZy8rVFdaeEdmWnNIRGN6Vi9NMVB1V1hFMjQyCmsrWjZkL1Q4S0d3Q3UvcWlNR3VTQm0vdnBSeEFuL1o3V3RmN3BjTUJYMHFxQ1YzVXZYUlo5aEsrTm1qUmMwd0wKL1pzU3ZVaFNCMS9aWUw5MTZEb0gzTGhudXEyRDRydlpuS1ROMXdJREFRQUJBb0lCQVFDeWVoS3Z4MThnbjZDdwpwMXdRNEZoaURFeWFWZXRtdmtBaVRPNU5NVjAxRC8rMWFEMzhJUUsyb2EvT1psc0hGeGVXUGpXVTduaC9Zbi9qCkFqVkZVV2tjUVB6WEZRVkRHUFh0cjA5Ty90cFJYdVVRMlF6RHF0NVo1ekxOY3Y2UlluNEIxTnljay9IMks1OEYKbWZwR2RMaXZwL1N1cXUxSU83MUV6djJxMVpid0pDbHVZMnpBVnVVTHNLWS9ySVkrVytMRUJSRFllSXpQUVo1aApxVS9jT0hCaTZiTmtxemhQQUs1TjdGWTVqNUg3bVc4K2wwb0pDY3ZzcHBhdEtnM3VjN1FMSkQ3TE1xenAxd0xFCnE1WURqT0dSQ3czYlpYMXpqNjhLZEZ1dXZRRUR2eUpDbGpQMVNidGtuKzR4U01OVWVQeC9kRWx5UkZXWVVGYmEKMXYyamJhSlJBb0dCQU84NmVpaHpMY1ZnaDRBbzdzM0RsNkxucVNSbnZVTDJqMENlVTU1RUhnTkJkZExGdjhxaApORTVsVHBoY0VoY09oSStrSkx5ZldoaC9zSWlkTm1kd00rbUJUcFNXVlpoQlpNNnByWUtPZEJ5bjFCdmdlUmtDCkhiTzFBeVU2U2gzRUFkckdLSHBzd2NNL05hZU5UYVZ5RG5mb2Z4WXF1bis4alkvTkV2YTZHYUdaQW9HQkFOQlYKVERwdmdVUkRYZWxMNEZPNjNJb3lCMVd3NDVMQkdDV2ZMemxpZFlJekRTRFNGUkErWTFiWXRTendEVXdLT3JHNwpCdG1kbkFEY2xRQ21OMXBxeXdLU3ZpcjZCdFdjMXJhaTlodGhJRlhITEd5cnhSRE43WWRWS3JNMnozZHczelRnCjJ4OUtUbllpR0c2RlJmTDA2a3dlOVp2YlZ6WVl3NnQ3YkgxeXBIRHZBb0dCQU9INldEaHJqSm44OUNKaENDdUEKam5YSTVXTEpSK1BBYWxOOCs3bnQySGYwMXVxeDk5amQ3RDM5dm45M3dYTGNPT1pEQkp6VTNsTjBFdnNKbnNHWgpJTUI3Y0JJMTdFYjF4dGJkTzFTdllnbExrN1o5bFliRkUrK1VscE1NKzhRZ1Npd3hzVHpzRFNCMVRpYW0rT2pHCjA5bjYya25ETlFiQ3d1cEtxcFk3OTBoSkFvR0FQZDBtYnEvUDNmcDNONkRkYzErb3Y2ek5lc2UxUEUzMG9xOWIKY1pub05RcDkyb0luMlJQOW9idG1TWHJiSi9wZHBZdFpKR1BtQUdlQUk1bzRFN1JrcGxYMi9JSVVaM2hVVmhXYwpLVk0xSytPaU1IN3RYT2tab0xkTW43MGw3RnpyR3lPdVRlTmQyenlTcnJjS3AzUE00MS9LSlVjRDViK0MwemdxClpqSVYzS2NDZ1lBRmU0RFJISGFNWkQvaG9oSkQ3Q3VlbnZLZDdZejlIOVFTcDJFcFJwcjBjUTBFOURGUUN5cCsKWHJzZER1Tk5RaDFpTHkvbXRWRGlFb1o4WlgvSGhtYmFOUElObXo1OC9OalZQdG5XRGE1NERyL0dVb2IwVHQzZQpJR3NuTEZsUkFEZms0SXhrZmJTdkZJS1RrSGg3RW5xNGtYOUZkNXpveExiZnNiZmppeDh4VWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
kind: Secret
metadata:
  name: ks-controller-manager-webhook-cert
type: Opaque
---
# Source: ks-core/templates/ks-console-config.yaml
apiVersion: v1
data:
  local_config.yaml: |
    server:
      http:
        hostname: localhost
        port: 8000
        static:
          production:
            /public: server/public
            /assets: dist/assets
            /dist: dist
      redis:
        port: 6379
        host: redis.kubesphere-system.svc
      redisTimeout: 5000
      sessionTimeout: 7200000
      apiServer:
        url: http://ks-apiserver
        wsUrl: ws://ks-apiserver
    
    client:
      version:
        kubesphere: v4.1.2
        kubernetes: v1.23.15
      enableKubeConfig: true
      enableNodeListTerminal: true
kind: ConfigMap
metadata:
  name: ks-console-config
  namespace: kubesphere-system
---
# Source: ks-core/templates/kubesphere-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubesphere-config
data:
  kubesphere.yaml: |
    authentication:
      authenticateRateLimiterMaxTries: 10
      authenticateRateLimiterDuration: 10m0s
      loginHistoryRetentionPeriod: 168h
      multipleLogin: true
      issuer:
        url: "http://ks-console.kubesphere-system.svc:30880"
        jwtSecret: "FaPMEeRHySt2QM7vyf2rHWKRhaCPWE1m"
        maximumClockSkew: 10s
        accessTokenMaxAge: 2h
        accessTokenInactivityTimeout: 30m
    s3:
      endpoint: ""
      region: us-east-1
      disableSSL: true
      forcePathStyle: true
      accessKeyID: admin
      secretAccessKey: admin
      bucket: uploads
    multicluster:
      clusterRole: "host"
      hostClusterName: "host"
    terminal:
      kubectl:
        image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
      node:
        image:  registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
      uploadFileLimit: 100Mi
    helmExecutor:
      image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
      timeout: 10m
      historyMax: 2
      jobTTLAfterFinished: 0s
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
    extension:
      imageRegistry: ""
    experimental:
      validationDirective: ""
    composedApp:
      appSelector: ""
    kubesphere:
      tls: false
    auditing:
      auditLevel: Metadata
      enable: false
      logOptions:
        maxAge: 7
        maxBackups: 10
        maxSize: 100
        path: /etc/audit/audit.log
---
# Source: ks-core/templates/clusterroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: '{"zh": "管理集群中的所有资源。", "en": "Manage all resources in the cluster."}'
    iam.kubesphere.io/auto-aggregate: "true"
  name: cluster-admin
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/scope: "cluster"
  templateNames: []
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: ks-core/templates/clusterroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: '{"zh": "查看集群中的所有资源。", "en": "View all resources in the cluster."}'
    iam.kubesphere.io/auto-aggregate: "true"
  name: cluster-viewer
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/aggregate-to-cluster-viewer: ""
  templateNames:
    - cluster-view-components
    - cluster-view-volume-snapshot-classes
    - cluster-view-volumes
    - cluster-view-roles
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - '*'
    verbs:
      - GET
---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesphere
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubesphere
    namespace: kubesphere-system
---
# Source: ks-core/templates/ks-console.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v4.1.2
  annotations:
  name: ks-console
spec:
  ports:
    - name: nginx
      port: 80
      protocol: TCP
      targetPort: 8000
      nodePort: 30880
  selector:
    app: ks-console
    tier: frontend
  type: NodePort
---
# Source: ks-core/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-apiserver
  labels:
    app: ks-apiserver
    tier: backend
    version: v4.1.2
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9090
  selector:
    app: ks-apiserver
    tier: backend
    # version: v4.1.2
  type: ClusterIP
---
# Source: ks-core/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v4.1.2
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: ks-controller-manager
    tier: backend
    # version: v4.1.2
  sessionAffinity: None
  type: ClusterIP
---
# Source: ks-core/templates/ks-apiserver.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: v4.1.2
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas:  1 
  selector:
    matchLabels:
      app: ks-apiserver
      tier: backend
  template:
    metadata:
      labels:
        app: ks-apiserver
        tier: backend
      annotations:
        # force restart ks-apiserver after the upgrade is complete if kubesphere-config changes
        checksum/config: 1fb4b250a8874ad09c1b7010f70820248dd678eafc00279da862ab46861bb40a
    spec:
      serviceAccountName: kubesphere
      
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: ks-apiserver
                topologyKey: kubernetes.io/hostname
                namespaces:
                  - "kubesphere-system"
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - name: ks-apiserver
          image: registry.cn-beijing.aliyuncs.com/kse/ks-apiserver:v4.1.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
              protocol: TCP
          command:
            - ks-apiserver
            - --logtostderr=true
          env:
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /version
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
            - mountPath: /etc/kubesphere/
              name: kubesphere-config
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
          
      volumes:
        - configMap:
            defaultMode: 420
            name: kubesphere-config
          name: kubesphere-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/ks-console.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v4.1.2
  name: ks-console
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas:  1 
  selector:
    matchLabels:
      app: ks-console
      tier: frontend
  template:
    metadata:
      labels:
        app: ks-console
        tier: frontend
      annotations:
        # force restart ks-console after the upgrade is complete if ks-console-config changes
        checksum/config: 6b3242d32e3550eae4326703839c7f0dcb04eb5724080cf93acce8836e08bde7
    spec:
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: ks-console
                topologyKey: kubernetes.io/hostname
                namespaces:
                  - "kubesphere-system"
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - name: ks-console
          image: registry.cn-beijing.aliyuncs.com/kse/ks-console:v4.1.2
          imagePullPolicy: IfNotPresent
          env:
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 8
          volumeMounts:
            - name: ks-console-config
              mountPath: /opt/kubesphere/console/configs/local_config.yaml
              subPath: local_config.yaml
            - name: host-time
              mountPath: /etc/localtime
              readOnly: true
      volumes:
        - configMap:
            defaultMode: 420
            name: ks-console-config
            items:
              - key: local_config.yaml
                path: local_config.yaml
          name: ks-console-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/ks-controller-manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v4.1.2
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-controller-manager
      tier: backend
  template:
    metadata:
      labels:
        app: ks-controller-manager
        tier: backend
      annotations:
        # force restart ks-controller-manager after the upgrade is complete if kubesphere-config changes
        checksum/config: 5ccd3f5ce6e8fa6bd3bb1639ce1a495b5b9d0856d39a5154b337fde078800a58
    spec:
      serviceAccountName: kubesphere
      
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: ks-controller-manager
                topologyKey: kubernetes.io/hostname
                namespaces:
                  - "kubesphere-system"
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      containers:
        - name: ks-controller-manager
          image: registry.cn-beijing.aliyuncs.com/kse/ks-controller-manager:v4.1.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          command:
            - controller-manager
            - --logtostderr=true
            - --leader-elect=true
            - --controllers=*
          env:
          resources:
            limits:
              cpu: 1
              memory: 1000Mi
            requests:
              cpu: 30m
              memory: 50Mi
          volumeMounts:
            - mountPath: /etc/kubesphere/
              name: kubesphere-config
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-secret
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
      volumes:
        - name: kubesphere-config
          configMap:
            name: kubesphere-config
            defaultMode: 420
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: ks-controller-manager-webhook-cert
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/cert-manager.yaml
---
---
# Source: ks-core/templates/roletemplate-categories.yaml
# category
---
# Source: ks-core/templates/roletemplates.yaml
# global scope role templates
---
# Source: ks-core/templates/tls-secrets.yaml
---
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-admin
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: "namespace"
        kubesphere.io/managed: "true"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理项目中的所有资源。", "en": "Manage all resources in the project."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: admin
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-operator
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-operator: ""
        kubesphere.io/managed: "true"
        iam.kubesphere.io/scope: "namespace"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理项目中除用户和角色之外的资源。", "en": "Manage resources other than users and roles in the project."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: operator
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - ""
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
        - config.istio.io
        - events.k8s.io
        - events.kubesphere.io
        - snapshot.storage.k8s.io
        - networking.k8s.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-viewer
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-viewer: ""
        kubesphere.io/managed: "true"
        iam.kubesphere.io/scope: "namespace"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看项目中的所有资源。", "en": "View all resources in the project."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: viewer
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-admin
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: 'workspace'
    templateNames:
      - workspace-manage-workspace-settings
      - workspace-view-workspace-settings
      - workspace-manage-projects
      - workspace-view-projects
      - workspace-create-projects
      - workspace-view-members
      - workspace-manage-members
      - workspace-manage-roles
      - workspace-view-roles
      - workspace-manage-groups
      - workspace-view-groups
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理企业空间中的所有资源。", "en": "Manage all resources in the workspace."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: admin
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-regular
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-regular: ""
        iam.kubesphere.io/scope: "workspace"
    templateNames:
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业空间设置。", "en": "View workspace settings."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: regular
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
        - workspacemembers
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-self-provisioner
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-self-provisioner: ""
        iam.kubesphere.io/scope: "workspace"
    templateNames:
      - workspace-create-projects
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业设置、创建项目。", "en": "View workspace settings, create projects."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: self-provisioner
  rules: []
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-viewer
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: "workspace"
        iam.kubesphere.io/aggregate-to-viewer: ""
    templateNames:
      - workspace-view-projects
      - workspace-view-members
      - workspace-view-roles
      - workspace-view-groups
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业空间中的所有资源。", "en": "View all resources in the workspace."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: viewer
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: ai-machine-learning
spec:
  displayName:
    en: AI / Machine learning
    zh: AI / 机器学习
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: database
spec:
  displayName:
    en: Database
    zh: 数据库
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: integration-delivery
spec:
  displayName:
    en: Integration and delivery
    zh: 集成和交付
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: observability
spec:
  displayName:
    en: Observability
    zh: 可观测性
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: networking
spec:
  displayName:
    en: Networking
    zh: 网络
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: security
spec:
  displayName:
    en: Security
    zh: 安全
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: storage
spec:
  displayName:
    en: Storage
    zh: 存储
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: streaming-messaging
spec:
  displayName:
    en: Streaming and messaging
    zh: 流平台和消息中间件
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: dev-tools
spec:
  displayName:
    en: Developer tools
    zh: 开发者工具
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: computing
spec:
  displayName:
    en: Computing
    zh: 计算
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-platform-settings
spec:
  displayName:
    en: 'Platform Settings'
    zh: '平台设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-workspace-management
spec:
  displayName:
    en: Workspace
    zh: '企业空间'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-cluster-management
spec:
  displayName:
    en: Cluster Management
    zh: '集群管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-resource-management
spec:
  displayName:
    en: Cluster Resources
    zh: '集群资源'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-settings
spec:
  displayName:
    en: Cluster Settings
    zh: '集群设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-app-workloads-management
spec:
  displayName:
    en: Application Workloads
    zh: '应用负载'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-project-management
spec:
  displayName:
    en: Project
    zh: '项目'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-storage-management
spec:
  displayName:
    en: Storage
    zh: '存储'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-settings
spec:
  displayName:
    en: Workspace Settings
    zh: '企业空间设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-project-management
spec:
  displayName:
    en: Projects
    zh: '项目'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-configuration-management
spec:
  displayName:
    en: Configuration
    zh: '配置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-storage-management
spec:
  displayName:
    en: Storage
    zh: '存储'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-application-workloads
spec:
  displayName:
    en: Application Workloads
    zh: '应用负载'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-settings
spec:
  displayName:
    en: Project Settings
    zh: '项目设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: manage-app
spec:
  displayName:
    en: 'AppStore Manage'
    zh: '应用商店管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: "true"
  name: workspace-app
spec:
  displayName:
    en: 'Workspace Apps'
    zh: '应用管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-app
spec:
  displayName:
    en: 'App Releases'
    zh: '应用'
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  name: anonymous
rules:
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - nonResourceURLs:
      - '/static/images/*'
    verbs:
      - GET
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/auto-aggregate: "true"
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        input.Resource == "users"
        input.User.Name == input.Name
      }
      allow = true {
        allowedResources := ["clustermembers","workspacemembers","namespacemembers"]
        allowedResources[_] == input.Resource
        input.User.Name == input.Name
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        allowedNoneResources := ["/api","/api/v1"]
        allowedNoneResources[_] == input.Path
        input.Verb == "GET"
      }
      allow = true {
        input.APIGroup == "tenant.kubesphere.io"
        input.KubernetesRequest == false
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        input.Resource == "pods"
        input.Subresource == "exec"
        allowedVerbs := ["get","create"]
        allowedVerbs[_] == input.Verb
        podName := input.Name
        prefix := "ks-managed-kubectl-"
        startswith(podName, prefix) == true
        input.Namespace == "kubesphere-system"
        input.User.Name == trim_prefix(podName, prefix)
      }
  name: authenticated
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/aggregate-to-authenticated: ""
      iam.kubesphere.io/scope: "global"
rules:
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
      - roletemplates
      - categories
    verbs:
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - registry
      - git
    verbs:
      - get
      - create
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - clusters
    verbs:
      - get
      - list
  - apiGroups:
      - '*'
    resources:
      - storageclasses
      - storageclasscapabilities
      - persistentvolumes
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - namespaces
      - services
    verbs:
      - list
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspacetemplates
    verbs:
      - patch
  - apiGroups:
      - extensions.kubesphere.io
    resources:
      - jsbundles
      - extensionentries
    verbs:
      - get
      - list
  - apiGroups:
      - kubesphere.io
    resources:
      - extensions
    verbs:
      - get
      - list
  - apiGroups:
      - application.kubesphere.io
    resources:
      - 'apps'
      - 'categories'
      - 'apps/versions'
      - 'applications'
    verbs:
      - get
      - list
  - apiGroups:
      - license.kubesphere.io
    resources:
      - licenses
    verbs:
      - get
      - list
  - apiGroups:
      - cluster.kubesphere.io
    resources:
      - 'labels'
    verbs:
      - get
      - list
  - nonResourceURLs:
      - '/static/images/*'
    verbs:
      - GET
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: '{"zh": "管理 KubeSphere 平台上的所有资源。", "en": "Manage all resources on the KubeSphere platform."}'
    iam.kubesphere.io/rego-override: >-
      package authz
      default allow = false
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
      }
    iam.kubesphere.io/auto-aggregate: "true"
  name: platform-admin
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/scope: "global"
  templateNames:
    - global-manage-clusters
    - global-view-clusters
    - global-create-workspaces
    - global-view-basic
    - global-manage-app-templates
    - global-manage-users
    - global-view-roles
    - global-manage-platform-settings
    - global-manage-workspaces
    - global-view-app-templates
    - global-view-users
    - global-manage-roles
    - global-view-workspaces
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/description: '{"zh": "被邀请加入企业空间之前无法访问任何资源。", "en": "Cannot access any resources before joining a workspace."}'
    kubesphere.io/creator: admin
  name: platform-regular
rules: []
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: '{"zh": "创建企业空间并成为所创建的企业空间的管理员。", "en": "Create workspaces and become an administrator of the created workspaces."}'
  name: platform-self-provisioner
aggregationRoleTemplates:
  templateNames:
    - global-create-workspaces
rules:
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspaces
      - workspacetemplates
    verbs:
      - create
      - watch
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  name: pre-registration
rules:
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
    verbs:
      - create
      - list
---
# Source: ks-core/templates/globalrolebindings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  labels:
    iam.kubesphere.io/role-ref: platform-admin
    iam.kubesphere.io/user-ref: admin
  name: admin
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: platform-admin
subjects:
  - apiGroup: iam.kubesphere.io
    kind: User
    name: admin
---
# Source: ks-core/templates/globalrolebindings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: anonymous
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: anonymous
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: system:unauthenticated
---
# Source: ks-core/templates/globalrolebindings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: authenticated
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: authenticated
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: system:authenticated
---
# Source: ks-core/templates/globalrolebindings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: pre-registration
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: pre-registration
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: pre-registration
  - apiGroup: iam.kubesphere.io
    kind: User
    name: system:pre-registration
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulter.installplan.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate-kubesphere-io-v1alpha1-installplan
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: installplans.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - kubesphere.io
        apiVersions:
          - 'v1alpha1'
        operations:
          - CREATE
          - UPDATE
        resources:
          - installplans
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: extensions.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate-extensions-kubesphere-io-v1alpha1-jsbundle
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: jsbundles.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jsbundles
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: serviceaccount.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /serviceaccount-pod-injector
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: serviceaccount-pod-injector.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulter.config.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate--v1-secret
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: defaulter.config.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: config.kubesphere.io/type
          operator: Exists
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - secrets
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "create"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-create-workspaces
spec:
  description:
    en: 'Create workspaces and become an administrator of the created projects.'
    zh: '创建企业空间。'
  displayName:
    en: Workspace Creation
    zh: '企业空间创建'
  rules:
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - create
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "view"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-workspaces
spec:
  description:
    en: 'View all workspaces and workspace resources.'
    zh: '查看所有工作空间和企业空间下的资源。'
  displayName:
    en: Workspace Viewing
    zh: 企业空间查看
  rules:
    - apiGroups:
        - '*'
      resources:
        - abnormalworkloads
        - quotas
        - workloads
        - configmaps
        - endpoints
        - events
        - limitranges
        - namespaces
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - events
        - ingresses
        - router
        - filters
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - workspacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - workspacetemplates
        - workspaceroles
        - workspacemembers
        - workspacemembers/namespaces
        - workspacerolebindings
        - workloads
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "manage"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-workspaces
spec:
  description:
    en: 'Manage all workspaces and workspace resources.'
    zh: '管理所有企业空间和企业空间下的资源。'
  displayName:
    en: Workspace Management
    zh: '企业空间管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - abnormalworkloads
        - quotas
        - workloads
        - configmaps
        - endpoints
        - events
        - limitranges
        - namespaces
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - events
        - ingresses
        - router
        - filters
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - workspacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - workspacetemplates
        - workspaceroles
        - workspacemembers
        - workspacemembers/namespaces
        - workspacerolebindings
        - workloads
      verbs:
        - '*'
    - apiGroups:
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"clusters": "view"}'
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
  labels:
    iam.kubesphere.io/category: global-cluster-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-clusters
spec:
  description:
    en: 'View all clusters and cluster resources.'
    zh: '查看所有集群和集群资源。'
  displayName:
    en: Cluster Viewing
    zh: '集群查看'
  rules:
    - apiGroups:
        - ""
        - apiextensions.k8s.io
        - app.k8s.io
        - apps
        - autoscaling
        - batch
        - config.istio.io
        - events.k8s.io
        - events.kubesphere.io
        - extensions
        - metrics.k8s.io
        - networking.k8s.io
        - node.k8s.io
        - rbac.istio.io
        - scheduling.k8s.io
        - security.istio.io
        - storage.k8s.io
        - storage.kubesphere.io
        - resources.kubesphere.io
        - cluster.kubesphere.io
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - clustermembers
        - clusterroles
      verbs:
        - get
        - list
        - watch
    - nonResourceURLs:
        - '*'
      verbs:
        - GET
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["global-view-clusters"]'
    iam.kubesphere.io/role-template-rules: '{"clusters": "manage"}'
    kubesphere.io/description: '{"zh":"创建集群、删除集群和管理集群中的所有资源。"}'
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
      }
  labels:
    iam.kubesphere.io/category: global-cluster-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-clusters
spec:
  description:
    en: 'Create clusters, delete clusters, and manage resources in all clusters.'
    zh: '创建集群、删除集群和管理集群中的所有资源。'
  displayName:
    en: Cluster Management
    zh: '集群管理'
  rules:
    - apiGroups:
        - ""
        - apiextensions.k8s.io
        - app.k8s.io
        - apps
        - autoscaling
        - batch
        - events.k8s.io
        - extensions
        - node.k8s.io
        - scheduling.k8s.io
        - storage.k8s.io
        - storage.k8s.io
        - storage.kubesphere.io
        - resources.kubesphere.io
        - cluster.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - update
        - patch
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - clustermembers
        - clusterroles
      verbs:
        - '*'
    - nonResourceURLs:
        - '*'
      verbs:
        - GET
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"platform-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: global-platform-settings
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-platform-settings
spec:
  description:
    zh: '查看和编辑 KubeSphere 平台的设置。'
    en: 'View and edit settings of the KubeSphere platform.'
  displayName:
    en: Platform Settings Management
    zh: '平台设置管理'
  rules:
    - apiGroups:
        - extensions.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["global-view-users"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-roles
spec:
  description:
    en: 'View platform roles.'
    zh: '查看平台角色。'
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules:
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - globalroles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-roles
spec:
  description:
    en: 'Manage platform roles.'
    zh: '管理平台角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - globalroles
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"users": "view"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-users
spec:
  description:
    en: 'View users.'
    zh: '查看用户。'
  displayName:
    en: User Viewing
    zh: '用户查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - users
        - users/loginrecords
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"users": "manage"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-users
spec:
  description:
    en: 'Manage users.'
    zh: '管理用户。'
  displayName:
    en: User Management
    zh: '用户管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - users
        - users/password
        - users/loginrecords
      verbs:
        - '*'


# cluster scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"cluster-settings": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-settings
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: "true"
  name: cluster-view-cluster-settings
spec:
  displayName:
    en: Cluster Settings View
    zh: '集群设置查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"cluster-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-settings
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: "true"
  name: cluster-manage-cluster-settings
spec:
  displayName:
    en: Cluster Settings Management
    zh: '集群设置管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"customresources": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: "true"
  name: cluster-view-crds
spec:
  displayName:
    en: Custom Resource Definition Viewing
    zh: '定制资源定义查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"customresources": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: "true"
  name: cluster-manage-crds
spec:
  displayName:
    en: Custom Resource Definition Management
    zh: '定制资源定义管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-members
spec:
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-roles", "cluster-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-members
spec:
  displayName:
    en: Member Management
    zh: '成员管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-roles
spec:
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-roles"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-roles
spec:
  displayName:
    en: Role Management
    zh: '角色管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"nodes": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-nodes
spec:
  displayName:
    en: Node Viewing
    zh: '节点查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-nodes"]'
    iam.kubesphere.io/role-template-rules: '{"nodes": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-nodes
spec:
  displayName:
    en: Node Management
    zh: '节点管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"deployments":"view","statefulsets":"view",
        "daemonsets":"view","jobs":"view","cronjobs":"view","pods":"view","services":"view","ingresses":"view",
        "configmaps":"view","secrets":"view","serviceaccounts":"view"}'
  labels:
    iam.kubesphere.io/category: cluster-app-workloads-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-app-workloads
spec:
  displayName:
    en: Application Workload Viewing
    zh: '应用负载查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-app-workloads", "cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"deployments":"manage","statefulsets":"manage",
            "daemonsets":"manage","jobs":"manage","cronjobs":"manage","pods":"manage","services":"manage",
            "ingresses":"manage","configmaps":"manage","secrets":"manage","serviceaccounts":"manage"}'
  labels:
    iam.kubesphere.io/category: cluster-app-workloads-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-app-workloads
spec:
  displayName:
    en: Application Workload Management
    zh: '应用负载管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-project-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-projects
spec:
  displayName:
    en: Project Viewing
    zh: '项目查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-project-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-projects
spec:
  displayName:
    en: Project Management
    zh: '项目管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-persistentvolumeclaims"]'
    iam.kubesphere.io/role-template-rules: '{"storageclasses": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-storageclasses
spec:
  displayName:
    en: Storage Class Viewing
    zh: '存储类查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-persistentvolumeclaims", "cluster-view-storageclasses"]'
    iam.kubesphere.io/role-template-rules: '{"storageclasses": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-storageclasses
spec:
  displayName:
    en: Storage Class Management
    zh: '存储类管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-persistentvolumeclaims
spec:
  displayName:
    en: Persistent Volume Claim Viewing
    zh: '持久卷声明查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-persistentvolumeclaims", "cluster-view-storageclasses"]'
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-persistentvolumeclaims
spec:
  displayName:
    en: Persistent Volume Claim Management
    zh: '持久卷声明管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"components": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-components
spec:
  displayName:
    en: System Component Viewing
    zh: '系统组件查看'
  rules: []

# workspace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspace-settings": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-settings
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-regular: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/basic-role-template: 'true'
    kubesphere.io/managed: 'true'
  name: workspace-view-workspace-settings
spec:
  description:
    en: 'View workspace settings.'
    zh: '查看企业空间设置。'
  displayName:
    en: Workspace Settings Viewing
    zh: '企业空间设置查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspace-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-settings
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-workspace-settings
spec:
  description:
    en: 'Manage workspace settings and edit workspace information and network policies.'
    zh: '管理企业空间的基本信息、网络策略等设置。'
  displayName:
    en: Workspace Settings Management
    zh: '企业空间设置管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "create"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-create-projects
spec:
  description:
    en: 'Create projects and become an administrator of the created projects.'
    zh: '创建项目并成为所创建的项目的管理员。'
  displayName:
    en: Project Creation
    zh: '项目创建'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
        - workspacemembers
        - quotas
        - abnormalworkloads
        - pods
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - federatednamespaces
      verbs:
        - create
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-projects
spec:
  description:
    en: 'View all projects and project resources.'
    zh: '查看企业空间中的所有项目及项目下的资源。'
  displayName:
    en: Project Viewing
    zh: '项目查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - configmaps
        - endpoints
        - events
        - limitranges
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - cronjobs
        - jobs
        - events
        - ingresses
        - router
        - pods
        - pods/log
        - pods/containers
        - namespacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - quotas
        - abnormalworkloads
        - workloads
        - router
        - strategies
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["workspace-view-projects","workspace-view-members","workspace-create-projects"]'
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-projects
spec:
  description:
    en: 'Create, edit, and delete projects in the workspace.'
    zh: '创建、编辑和删除企业空间中的项目。'
  displayName:
    en: Project Management
    zh: '项目管理'
  rules:
    - apiGroups:
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - configmaps
        - endpoints
        - events
        - limitranges
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - events
        - ingresses
        - router
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - quotas
        - abnormalworkloads
        - workloads
        - router
        - strategies
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-members
spec:
  description:
    en: 'View workspace members.'
    zh: '查看企业空间成员。'
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspacemembers
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-members
spec:
  description:
    en: 'Manage workspace members.'
    zh: '管理企业空间成员。'
  displayName:
    en: Member Management
    zh: '成员管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspacemembers
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["workspace-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-roles
spec:
  description:
    en: 'View workspace roles.'
    zh: '查看企业空间角色。'
  displayName:
    en: Role Viewing
    zh: "角色查看"
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-roles
spec:
  description:
    en: 'Manage workspace roles.'
    zh: '管理企业空间角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - '*'

# namespace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"project-settings": "view"}'
  labels:
    iam.kubesphere.io/category: namespace-settings
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
    iam.kubesphere.io/basic-role-template: 'true'
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: namespace-view-project-settings
spec:
  description:
    en: 'View project settings including project basic information, external access settings and resource quotas settings.'
    zh: '查看项目设置，包括项目基本信息、外部访问设置、资源配额等。'
  displayName:
    en: Project Settings Viewing
    zh: '项目设置查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - 'namespaces'
      verbs:
        - 'get'
    - apiGroups:
        - 'resources.kubesphere.io'
      resources:
        - 'quotas'
        - 'metrics'
      verbs:
        - 'list'
    - apiGroups:
        - ''
      resources:
        - 'limitranges'
      verbs:
        - 'list'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"project-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-settings
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-project-settings
spec:
  description:
    en: 'Manage project settings including project basic information, external access settings and resource quotas settings.'
    zh: '管理项目设置，包括项目基本信息、外部访问设置、资源配额等。'
  displayName:
    en: Project Settings Management
    zh: '项目设置管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-members
spec:
  description:
    en: 'View project members.'
    zh: '查看项目成员。'
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespacemembers
        - rolebindings
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-members
spec:
  description:
    en: 'Manage project members.'
    zh: '管理项目成员。'
  displayName:
    en: Member Management
    zh: '成员管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespacemembers
        - rolebindings
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-roles
spec:
  description:
    en: 'View project roles.'
    zh: '查看项目角色。'
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - roles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-roles
spec:
  description:
    en: 'Manage project roles.'
    zh: '管理项目角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - roles
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-volumes","namespace-view-secrets","namespace-view-configmaps"]'
    iam.kubesphere.io/role-template-rules: '{"applications":"view","deployments":"view","statefulsets":"view",
    "daemonsets":"view","jobs":"view","cronjobs":"view","pods":"view","services":"view","ingresses":"view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-application-workloads
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-app-workloads
spec:
  description:
    en: 'View resources such as applications, services, workloads and jobs in the project.'
    zh: '查看项目中的应用、服务、工作负载和任务等资源。'
  displayName:
    en: Application Workload Viewing
    zh: '应用负载查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - pods
        - pods/log
        - pods/containers
        - services
        - ingresses
        - router
        - horizontalpodautoscalers
        - configmaps
        - secrets
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-app-workloads"]'
    iam.kubesphere.io/role-template-rules: '{"applications":"manage","deployments":"manage","statefulsets":"manage",
      "daemonsets":"manage","jobs":"manage","cronjobs":"manage","pods":"manage","services":"manage","ingresses":"manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-application-workloads
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-app-workloads
spec:
  description:
    en: 'Manage resources such as applications, services, workloads and jobs in the project.'
    zh: '管理项目中的应用、服务、工作负载和任务等资源。'
  displayName:
    en: Application Workload Management
    zh: '应用负载管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - services
        - ingresses
        - router
        - workloads
        - horizontalpodautoscalers
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"configmaps": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-configmaps
spec:
  description:
    en: 'View configmaps in the project.'
    zh: '查看项目中的配置字典。'
  displayName:
    en: ConfigMap Viewing
    zh: '配置字典查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - configmaps
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-configmaps"]'
    iam.kubesphere.io/role-template-rules: '{"configmaps": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-configmaps
spec:
  description:
    en: 'Create, edit, and delete configmaps in the project.'
    zh: '创建、编辑和删除项目中的配置字典。'
  displayName:
    en: ConfigMap Management
    zh: '配置字典管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - configmaps
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"secrets": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-secrets
spec:
  description:
    en: 'View secrets in the project.'
    zh: '查看项目中的保密字典。'
  displayName:
    en: Secret Viewing
    zh: '保密字典查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-secrets"]'
    iam.kubesphere.io/role-template-rules: '{"secrets": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-secrets
spec:
  description:
    en: 'Create, edit, and delete secrets in the project.'
    zh: '创建、编辑和删除项目中的保密字典。'
  displayName:
    en: Secret Management
    zh: '保密字典管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-roles","namespace-view-secrets"]'
    iam.kubesphere.io/role-template-rules: '{"serviceaccounts": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-serviceaccount
spec:
  description:
    en: 'View service accounts in the project.'
    zh: '查看项目中的服务账户。'
  displayName:
    en: Service Account Viewing
    zh: '服务账户查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - serviceaccounts
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-serviceaccount"]'
    iam.kubesphere.io/role-template-rules: '{"serviceaccounts": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-serviceaccount
spec:
  description:
    en: 'Create, edit, and delete service accounts in the project.'
    zh: '创建、编辑和删除项目中的服务帐户。'
  displayName:
    en: Service Account Management
    zh: '服务账户管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - serviceaccounts
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-storage-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-persistentvolumeclaims
spec:
  description:
    en: 'View persistent volume claims in the project.'
    zh: '查看项目中的持久卷声明。'
  displayName:
    en: PersistentVolumeClaims Viewing
    zh: '持久卷声明查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - persistentvolumeclaims
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - '*'
      resources:
        - pods
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-persistentvolumeclaims"]'
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-storage-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-persistentvolumeclaims
spec:
  description:
    en: 'Create, edit, and delete persistent volume claims in the project.'
    zh: '创建、编辑和删除项目中的持久卷声明。'
  displayName:
    en: PersistentVolumeClaims Management
    zh: 持久卷声明管理
  rules:
    - apiGroups:
        - '*'
      resources:
        - persistentvolumeclaims
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - pods
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
# global scope role templates
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"manage-app": "manage"}'
  labels:
    iam.kubesphere.io/category: manage-app
    iam.kubesphere.io/scope: global
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-admin: ""
  name: global-role-template-manage-app
spec:
  description:
    en: 'AppStore Management'
    zh: '应用商店管理'
  displayName:
    en: 'AppStore Management'
    zh: '应用商店管理'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'

# workspace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-repos": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-view-app-repos
spec:
  description:
    en: 'Workspace App Repos View'
    zh: '企业空间应用仓库查看。'
  displayName:
    en: 'Workspace App Repos View'
    zh: '应用仓库查看'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - repos
        - repos/events
      verbs:
        - get
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-repos": "manage"}'
    iam.kubesphere.io/dependencies: '["workspace-view-app-repos"]'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: workspace-manage-app-repos
spec:
  description:
    en: 'Workspace App Repos Management'
    zh: '企业空间应用仓库管理。'
  displayName:
    en: 'Workspace App Repos Management'
    zh: '应用仓库管理'
  rules:
    - apiGroups:
        - 'application.kubesphere.io'
      resources:
        - 'repos'
        - 'repos/events'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-view-app-templates
spec:
  description:
    en: 'Application/application version/application instance view'
    zh: '应用/应用版本/应用实例查看'
  displayName:
    en: 'Application/application version/application instance view'
    zh: '应用/应用版本/应用实例查看'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - get
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-view-create-app-templates
spec:
  description:
    en: 'Workspace Application/application version/application instance view and create'
    zh: '应用/应用版本/应用实例查看和创建'
  displayName:
    en: 'Workspace Application/application version/application instance view and create'
    zh: '应用/应用版本/应用实例查看和创建'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - get
        - list
        - create
        - update
        - patch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-delete-app-templates
spec:
  description:
    en: 'Workspace Application/application version/application instance deletion'
    zh: '应用/应用版本/应用实例删除'
  displayName:
    en: 'Application/application version/application instance deletion'
    zh: '应用/应用版本/应用实例删除'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - delete
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "manage"}'
    iam.kubesphere.io/dependencies: '["workspace-view-app-templates","workspace-view-create-app-templates","workspace-delete-app-templates"]'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: workspace-manage-app-templates
spec:
  description:
    en: 'Workspace applications/application versions/application instance management'
    zh: '应用/应用版本/应用实例管理'
  displayName:
    en: 'Workspace applications/application versions/application instance management'
    zh: '应用/应用版本/应用实例管理'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - '*'

# namespace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "view"}'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: namespace-view-app-releases
spec:
  description:
    en: 'Namespace App Releases View'
    zh: '项目下查看应用实例等。'
  displayName:
    en: 'Namespace App Releases View'
    zh: '应用实例查看'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - get
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "manage"}'
    iam.kubesphere.io/dependencies: '["namespace-view-app-releases","namespace-delete-app-releases","namespace-create-app-releases"]'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: namespace-manage-app-releases
spec:
  description:
    en: 'Namespace App Releases Management'
    zh: '项目下应用实例管理'
  displayName:
    en: 'Namespace App Releases Management'
    zh: '应用实例管理'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: namespace-delete-app-releases
spec:
  description:
    en: 'Namespace Application instance deletion'
    zh: '项目下应用实例删除'
  displayName:
    en: 'Namespace Application instance deletion'
    zh: '应用实例删除'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - delete
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: namespace-create-app-releases
spec:
  description:
    en: 'Namespace Application instance create'
    zh: '项目下应用实例创建'
  displayName:
    en: 'Namespace Application instance create'
    zh: '应用实例创建'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - post
---
# Source: ks-core/templates/user.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: User
metadata:
  name: admin
  annotations:
    iam.kubesphere.io/uninitialized: "true"
    iam.kubesphere.io/globalrole: "platform-admin"
    kubesphere.io/creator: "system"
spec:
  email: admin@kubesphere.io
  password: "$2a$10$zcHepmzfKPoxCVCYZr5K7ORPZZ/ySe9p/7IUb/8u./xHrnSX2LOCO"
status:
  state: Active
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: users.iam.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-iam-kubesphere-io-v1beta1-user
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: users.iam.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - iam.kubesphere.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - users
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validator.installplan.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-kubesphere-io-v1alpha1-installplan
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: installplans.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - kubesphere.io
        apiVersions:
          - 'v1alpha1'
        operations:
          - CREATE
          - UPDATE
        resources:
          - installplans
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: resourcesquotas.quota.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-quota-kubesphere-io-v1alpha2
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: resourcesquotas.quota.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
          - persistentvolumeclaims
          - services
        scope: '*'
    sideEffects: None
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: extensions.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-jsbundle
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: jsbundles.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jsbundles
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-apiservice
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: apiservices.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - apiservices
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-reverseproxy
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: reverseproxies.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - reverseproxies
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-extensionentry
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: extensionentries.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - extensionentries
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validator.config.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate--v1-secret
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: validator.config.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: config.kubesphere.io/type
          operator: Exists
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - secrets
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: license.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lRQTd3RGFpOWxNSXhnYzJMZlBLOTNPREFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTVNVGt3TXpJMk1EWmFGdzB6TkRBNQpNVGN3TXpJMk1EWmFNQmt4RnpBVkJnTlZCQU1URG5ObGJHWXRjMmxuYm1Wa0xXTmhNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzTmVEdkJmaE00YnpjYThGc050RmNRaWpqU0l3Q1VCTmlKcHgKTHBPc210dUt0cXhuWG51Q3p5LzdDdGIyQnpwbHl3VWZpSExpYmhEcVFWTHE1NjB2MUtsSnYzb1F4QXZPQ0tpSQo2N1IvUUZBUklOdUovVFZLUDFrVE5VdVY1Y2toalF4V2NEVllleStZWFQ4M2pYV3V3dGRQVG51azhTb29kU3lmCk01OHRIdVZnQXREZzBtVk9IK2t5b3FXaWhUaE5aUkEyU3d0STdDWXJyNmhEbmZWWHY2djFQWDFwQ2JYYVNmK3UKa2pISnRxV1ZqTWhDK1RpOWhmSGlCV0tDQ0FIckUyYk0za3JFV1RZbkRSYVV1amRHUExydjFHbStOcG9XdFgwSgpMVWZmL29TQURkWU9rUjN4YXU1UzNpcjE3N1RSdm1JdkRJTlh3bmRGRTZ1djhPcUFBd0lEQVFBQm8yRXdYekFPCkJnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVBETmV2aURFaE5Ib0VYbEN6M0RUeUNwamNsTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVpWTSt4T2ErWlpQQS9pUk5tb2RGMWg4OTVIMk9HNUtRQ3Y3Wk5ESjJYCmUyR0dvQU4zc3VMbnVUV0IxaEtTNmJGbm9tdWlzUUtJU1RFYjRicSt4dElxdU4yQXIvYkFYM3pOem5UYVBDZXgKYzNwbENlK3hCWktJT0pmMU9PRG42VVBrb0dpK05IbVBhQVdtZFQwbHU0bFp3cG4rL0ZaNHZDQ2hoS1phclh6bwo4eWF1NmZXM2swTGNhMGRYUGJnZ0VFMklzSDc5bnhqc0k4N1NhOEFqdkNxVml3d05pMzlacVZtMTVQbEtCQUpiCkdKS2ZEanZHZW1NUGs3M1FpOFJzT0lxNGJuUXBpQko3UUQvbmtzUVB0ZTJVU0ZvQ2FXWU1INklXVmg3NDFxZloKK1pQVlZ0MEVRMXA2ZXZEdldZcTZUaW5EZkJqb2t6aXVMR3dhY1duRCtETlEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /license-cluster-checker
        port: 443
    name: license-cluster-checker.kubesphere.io
    failurePolicy: Ignore
    matchPolicy: Exact
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: cluster-role.kubesphere.io/host
          operator: DoesNotExist
    rules:
      - apiGroups:
          - cluster.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - clusters
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/workspace.yaml
apiVersion: tenant.kubesphere.io/v1beta1
kind: WorkspaceTemplate
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: "system-workspace is a built-in workspace automatically created by KubeSphere. It contains all system components to run KubeSphere."
  name: system-workspace
spec:
  placement:
    clusterSelector: {}
  template:
    spec:
      manager: admin

NOTES:
Thank you for choosing KubeSphere Helm Chart.

Please be patient and wait for several seconds for the KubeSphere deployment to complete.

1. Wait for Deployment Completion

    Confirm that all KubeSphere components are running by executing the following command:

    kubectl get pods -n kubesphere-system
2. Access the KubeSphere Console

    Once the deployment is complete, you can access the KubeSphere console using the following URL:  

    http://192.168.100.7:30880

3. Login to KubeSphere Console

    Use the following credentials to log in:

    Account: admin
    Password: P@88w0rd

NOTE: It is highly recommended to change the default password immediately after the first login.
For additional information and details, please visit https://kubesphere.io.
